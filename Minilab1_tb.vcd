$date
	Thu Jan 30 18:55:30 2025
$end
$version
	Questa Intel Starter FPGA Edition Version 2023.3
$end
$timescale
	1ps
$end

$scope module Minilab1_tb $end
$var reg 1 ! CLOCK_50 $end
$var reg 4 " KEY [3:0] $end
$var reg 10 # SW [9:0] $end
$var wire 1 $ LEDR [9] $end
$var wire 1 % LEDR [8] $end
$var wire 1 & LEDR [7] $end
$var wire 1 ' LEDR [6] $end
$var wire 1 ( LEDR [5] $end
$var wire 1 ) LEDR [4] $end
$var wire 1 * LEDR [3] $end
$var wire 1 + LEDR [2] $end
$var wire 1 , LEDR [1] $end
$var wire 1 - LEDR [0] $end
$var wire 1 . HEX0 [6] $end
$var wire 1 / HEX0 [5] $end
$var wire 1 0 HEX0 [4] $end
$var wire 1 1 HEX0 [3] $end
$var wire 1 2 HEX0 [2] $end
$var wire 1 3 HEX0 [1] $end
$var wire 1 4 HEX0 [0] $end
$var wire 1 5 HEX1 [6] $end
$var wire 1 6 HEX1 [5] $end
$var wire 1 7 HEX1 [4] $end
$var wire 1 8 HEX1 [3] $end
$var wire 1 9 HEX1 [2] $end
$var wire 1 : HEX1 [1] $end
$var wire 1 ; HEX1 [0] $end
$var wire 1 < HEX2 [6] $end
$var wire 1 = HEX2 [5] $end
$var wire 1 > HEX2 [4] $end
$var wire 1 ? HEX2 [3] $end
$var wire 1 @ HEX2 [2] $end
$var wire 1 A HEX2 [1] $end
$var wire 1 B HEX2 [0] $end
$var wire 1 C HEX3 [6] $end
$var wire 1 D HEX3 [5] $end
$var wire 1 E HEX3 [4] $end
$var wire 1 F HEX3 [3] $end
$var wire 1 G HEX3 [2] $end
$var wire 1 H HEX3 [1] $end
$var wire 1 I HEX3 [0] $end
$var wire 1 J HEX4 [6] $end
$var wire 1 K HEX4 [5] $end
$var wire 1 L HEX4 [4] $end
$var wire 1 M HEX4 [3] $end
$var wire 1 N HEX4 [2] $end
$var wire 1 O HEX4 [1] $end
$var wire 1 P HEX4 [0] $end
$var wire 1 Q HEX5 [6] $end
$var wire 1 R HEX5 [5] $end
$var wire 1 S HEX5 [4] $end
$var wire 1 T HEX5 [3] $end
$var wire 1 U HEX5 [2] $end
$var wire 1 V HEX5 [1] $end
$var wire 1 W HEX5 [0] $end

$scope module dut $end
$var parameter 7 X HEX_0 $end
$var parameter 7 Y HEX_1 $end
$var parameter 7 Z HEX_2 $end
$var parameter 7 [ HEX_3 $end
$var parameter 7 \ HEX_4 $end
$var parameter 7 ] HEX_5 $end
$var parameter 7 ^ HEX_6 $end
$var parameter 7 _ HEX_7 $end
$var parameter 7 ` HEX_8 $end
$var parameter 7 a HEX_9 $end
$var parameter 7 b HEX_10 $end
$var parameter 7 c HEX_11 $end
$var parameter 7 d HEX_12 $end
$var parameter 7 e HEX_13 $end
$var parameter 7 f HEX_14 $end
$var parameter 7 g HEX_15 $end
$var parameter 7 h OFF $end
$var wire 1 i CLOCK_50 $end
$var wire 1 j KEY [3] $end
$var wire 1 k KEY [2] $end
$var wire 1 l KEY [1] $end
$var wire 1 m KEY [0] $end
$var wire 1 n SW [9] $end
$var wire 1 o SW [8] $end
$var wire 1 p SW [7] $end
$var wire 1 q SW [6] $end
$var wire 1 r SW [5] $end
$var wire 1 s SW [4] $end
$var wire 1 t SW [3] $end
$var wire 1 u SW [2] $end
$var wire 1 v SW [1] $end
$var wire 1 w SW [0] $end
$var reg 10 x LEDR [9:0] $end
$var reg 7 y HEX0 [6:0] $end
$var reg 7 z HEX1 [6:0] $end
$var reg 7 { HEX2 [6:0] $end
$var reg 7 | HEX3 [6:0] $end
$var reg 7 } HEX4 [6:0] $end
$var reg 7 ~ HEX5 [6:0] $end
$var reg 32 !! address [31:0] $end
$var reg 1 "! read $end
$var reg 64 #! readdata [63:0] $end
$var reg 1 $! readdatavalid $end
$var reg 1 %! waitrequest $end
$var reg 1 &! wren_B $end
$var reg 1 '! rden_B $end
$var reg 8 (! fifoB_in [7:0] $end
$var reg 8 )! fifoB_out [7:0] $end
$var reg 1 *! full_B $end
$var reg 1 +! empty_B $end
$var reg 5 ,! current_state [4:0] $end
$var reg 5 -! next_state [4:0] $end
$var reg 3 .! byte_counter [2:0] $end
$var reg 64 /! data_latch [63:0] $end
$var integer 32 0! r $end
$var reg 3 1! sel [2:0] $end

$scope begin MAC_ARRAY[7] $end
$var parameter 32 2! i $end

$scope module u_mac $end
$var parameter 32 3! DATA_WIDTH $end
$var wire 1 i clk $end
$var wire 1 m rst_n $end
$var wire 1 4! En $end
$var wire 1 5! Clr $end
$var wire 1 6! Ain [7] $end
$var wire 1 7! Ain [6] $end
$var wire 1 8! Ain [5] $end
$var wire 1 9! Ain [4] $end
$var wire 1 :! Ain [3] $end
$var wire 1 ;! Ain [2] $end
$var wire 1 <! Ain [1] $end
$var wire 1 =! Ain [0] $end
$var wire 1 >! Bin [7] $end
$var wire 1 ?! Bin [6] $end
$var wire 1 @! Bin [5] $end
$var wire 1 A! Bin [4] $end
$var wire 1 B! Bin [3] $end
$var wire 1 C! Bin [2] $end
$var wire 1 D! Bin [1] $end
$var wire 1 E! Bin [0] $end
$var wire 1 F! Cout [23] $end
$var wire 1 G! Cout [22] $end
$var wire 1 H! Cout [21] $end
$var wire 1 I! Cout [20] $end
$var wire 1 J! Cout [19] $end
$var wire 1 K! Cout [18] $end
$var wire 1 L! Cout [17] $end
$var wire 1 M! Cout [16] $end
$var wire 1 N! Cout [15] $end
$var wire 1 O! Cout [14] $end
$var wire 1 P! Cout [13] $end
$var wire 1 Q! Cout [12] $end
$var wire 1 R! Cout [11] $end
$var wire 1 S! Cout [10] $end
$var wire 1 T! Cout [9] $end
$var wire 1 U! Cout [8] $end
$var wire 1 V! Cout [7] $end
$var wire 1 W! Cout [6] $end
$var wire 1 X! Cout [5] $end
$var wire 1 Y! Cout [4] $end
$var wire 1 Z! Cout [3] $end
$var wire 1 [! Cout [2] $end
$var wire 1 \! Cout [1] $end
$var wire 1 ]! Cout [0] $end
$var reg 16 ^! product_ff [15:0] $end
$var reg 24 _! accumulator [23:0] $end
$var reg 8 `! ff_Ain [7:0] $end
$var reg 8 a! ff_Bin [7:0] $end
$var reg 8 b! ffff_Ain [7:0] $end
$var reg 8 c! ffff_Bin [7:0] $end
$var reg 1 d! ff_En $end
$var reg 1 e! ffff_En $end
$upscope $end
$upscope $end

$scope begin MAC_ARRAY[6] $end
$var parameter 32 f! i $end

$scope module u_mac $end
$var parameter 32 g! DATA_WIDTH $end
$var wire 1 i clk $end
$var wire 1 m rst_n $end
$var wire 1 h! En $end
$var wire 1 i! Clr $end
$var wire 1 j! Ain [7] $end
$var wire 1 k! Ain [6] $end
$var wire 1 l! Ain [5] $end
$var wire 1 m! Ain [4] $end
$var wire 1 n! Ain [3] $end
$var wire 1 o! Ain [2] $end
$var wire 1 p! Ain [1] $end
$var wire 1 q! Ain [0] $end
$var wire 1 r! Bin [7] $end
$var wire 1 s! Bin [6] $end
$var wire 1 t! Bin [5] $end
$var wire 1 u! Bin [4] $end
$var wire 1 v! Bin [3] $end
$var wire 1 w! Bin [2] $end
$var wire 1 x! Bin [1] $end
$var wire 1 y! Bin [0] $end
$var wire 1 z! Cout [23] $end
$var wire 1 {! Cout [22] $end
$var wire 1 |! Cout [21] $end
$var wire 1 }! Cout [20] $end
$var wire 1 ~! Cout [19] $end
$var wire 1 !" Cout [18] $end
$var wire 1 "" Cout [17] $end
$var wire 1 #" Cout [16] $end
$var wire 1 $" Cout [15] $end
$var wire 1 %" Cout [14] $end
$var wire 1 &" Cout [13] $end
$var wire 1 '" Cout [12] $end
$var wire 1 (" Cout [11] $end
$var wire 1 )" Cout [10] $end
$var wire 1 *" Cout [9] $end
$var wire 1 +" Cout [8] $end
$var wire 1 ," Cout [7] $end
$var wire 1 -" Cout [6] $end
$var wire 1 ." Cout [5] $end
$var wire 1 /" Cout [4] $end
$var wire 1 0" Cout [3] $end
$var wire 1 1" Cout [2] $end
$var wire 1 2" Cout [1] $end
$var wire 1 3" Cout [0] $end
$var reg 16 4" product_ff [15:0] $end
$var reg 24 5" accumulator [23:0] $end
$var reg 8 6" ff_Ain [7:0] $end
$var reg 8 7" ff_Bin [7:0] $end
$var reg 8 8" ffff_Ain [7:0] $end
$var reg 8 9" ffff_Bin [7:0] $end
$var reg 1 :" ff_En $end
$var reg 1 ;" ffff_En $end
$upscope $end
$upscope $end

$scope begin MAC_ARRAY[5] $end
$var parameter 32 <" i $end

$scope module u_mac $end
$var parameter 32 =" DATA_WIDTH $end
$var wire 1 i clk $end
$var wire 1 m rst_n $end
$var wire 1 >" En $end
$var wire 1 ?" Clr $end
$var wire 1 @" Ain [7] $end
$var wire 1 A" Ain [6] $end
$var wire 1 B" Ain [5] $end
$var wire 1 C" Ain [4] $end
$var wire 1 D" Ain [3] $end
$var wire 1 E" Ain [2] $end
$var wire 1 F" Ain [1] $end
$var wire 1 G" Ain [0] $end
$var wire 1 H" Bin [7] $end
$var wire 1 I" Bin [6] $end
$var wire 1 J" Bin [5] $end
$var wire 1 K" Bin [4] $end
$var wire 1 L" Bin [3] $end
$var wire 1 M" Bin [2] $end
$var wire 1 N" Bin [1] $end
$var wire 1 O" Bin [0] $end
$var wire 1 P" Cout [23] $end
$var wire 1 Q" Cout [22] $end
$var wire 1 R" Cout [21] $end
$var wire 1 S" Cout [20] $end
$var wire 1 T" Cout [19] $end
$var wire 1 U" Cout [18] $end
$var wire 1 V" Cout [17] $end
$var wire 1 W" Cout [16] $end
$var wire 1 X" Cout [15] $end
$var wire 1 Y" Cout [14] $end
$var wire 1 Z" Cout [13] $end
$var wire 1 [" Cout [12] $end
$var wire 1 \" Cout [11] $end
$var wire 1 ]" Cout [10] $end
$var wire 1 ^" Cout [9] $end
$var wire 1 _" Cout [8] $end
$var wire 1 `" Cout [7] $end
$var wire 1 a" Cout [6] $end
$var wire 1 b" Cout [5] $end
$var wire 1 c" Cout [4] $end
$var wire 1 d" Cout [3] $end
$var wire 1 e" Cout [2] $end
$var wire 1 f" Cout [1] $end
$var wire 1 g" Cout [0] $end
$var reg 16 h" product_ff [15:0] $end
$var reg 24 i" accumulator [23:0] $end
$var reg 8 j" ff_Ain [7:0] $end
$var reg 8 k" ff_Bin [7:0] $end
$var reg 8 l" ffff_Ain [7:0] $end
$var reg 8 m" ffff_Bin [7:0] $end
$var reg 1 n" ff_En $end
$var reg 1 o" ffff_En $end
$upscope $end
$upscope $end

$scope begin MAC_ARRAY[4] $end
$var parameter 32 p" i $end

$scope module u_mac $end
$var parameter 32 q" DATA_WIDTH $end
$var wire 1 i clk $end
$var wire 1 m rst_n $end
$var wire 1 r" En $end
$var wire 1 s" Clr $end
$var wire 1 t" Ain [7] $end
$var wire 1 u" Ain [6] $end
$var wire 1 v" Ain [5] $end
$var wire 1 w" Ain [4] $end
$var wire 1 x" Ain [3] $end
$var wire 1 y" Ain [2] $end
$var wire 1 z" Ain [1] $end
$var wire 1 {" Ain [0] $end
$var wire 1 |" Bin [7] $end
$var wire 1 }" Bin [6] $end
$var wire 1 ~" Bin [5] $end
$var wire 1 !# Bin [4] $end
$var wire 1 "# Bin [3] $end
$var wire 1 ## Bin [2] $end
$var wire 1 $# Bin [1] $end
$var wire 1 %# Bin [0] $end
$var wire 1 &# Cout [23] $end
$var wire 1 '# Cout [22] $end
$var wire 1 (# Cout [21] $end
$var wire 1 )# Cout [20] $end
$var wire 1 *# Cout [19] $end
$var wire 1 +# Cout [18] $end
$var wire 1 ,# Cout [17] $end
$var wire 1 -# Cout [16] $end
$var wire 1 .# Cout [15] $end
$var wire 1 /# Cout [14] $end
$var wire 1 0# Cout [13] $end
$var wire 1 1# Cout [12] $end
$var wire 1 2# Cout [11] $end
$var wire 1 3# Cout [10] $end
$var wire 1 4# Cout [9] $end
$var wire 1 5# Cout [8] $end
$var wire 1 6# Cout [7] $end
$var wire 1 7# Cout [6] $end
$var wire 1 8# Cout [5] $end
$var wire 1 9# Cout [4] $end
$var wire 1 :# Cout [3] $end
$var wire 1 ;# Cout [2] $end
$var wire 1 <# Cout [1] $end
$var wire 1 =# Cout [0] $end
$var reg 16 ># product_ff [15:0] $end
$var reg 24 ?# accumulator [23:0] $end
$var reg 8 @# ff_Ain [7:0] $end
$var reg 8 A# ff_Bin [7:0] $end
$var reg 8 B# ffff_Ain [7:0] $end
$var reg 8 C# ffff_Bin [7:0] $end
$var reg 1 D# ff_En $end
$var reg 1 E# ffff_En $end
$upscope $end
$upscope $end

$scope begin MAC_ARRAY[3] $end
$var parameter 32 F# i $end

$scope module u_mac $end
$var parameter 32 G# DATA_WIDTH $end
$var wire 1 i clk $end
$var wire 1 m rst_n $end
$var wire 1 H# En $end
$var wire 1 I# Clr $end
$var wire 1 J# Ain [7] $end
$var wire 1 K# Ain [6] $end
$var wire 1 L# Ain [5] $end
$var wire 1 M# Ain [4] $end
$var wire 1 N# Ain [3] $end
$var wire 1 O# Ain [2] $end
$var wire 1 P# Ain [1] $end
$var wire 1 Q# Ain [0] $end
$var wire 1 R# Bin [7] $end
$var wire 1 S# Bin [6] $end
$var wire 1 T# Bin [5] $end
$var wire 1 U# Bin [4] $end
$var wire 1 V# Bin [3] $end
$var wire 1 W# Bin [2] $end
$var wire 1 X# Bin [1] $end
$var wire 1 Y# Bin [0] $end
$var wire 1 Z# Cout [23] $end
$var wire 1 [# Cout [22] $end
$var wire 1 \# Cout [21] $end
$var wire 1 ]# Cout [20] $end
$var wire 1 ^# Cout [19] $end
$var wire 1 _# Cout [18] $end
$var wire 1 `# Cout [17] $end
$var wire 1 a# Cout [16] $end
$var wire 1 b# Cout [15] $end
$var wire 1 c# Cout [14] $end
$var wire 1 d# Cout [13] $end
$var wire 1 e# Cout [12] $end
$var wire 1 f# Cout [11] $end
$var wire 1 g# Cout [10] $end
$var wire 1 h# Cout [9] $end
$var wire 1 i# Cout [8] $end
$var wire 1 j# Cout [7] $end
$var wire 1 k# Cout [6] $end
$var wire 1 l# Cout [5] $end
$var wire 1 m# Cout [4] $end
$var wire 1 n# Cout [3] $end
$var wire 1 o# Cout [2] $end
$var wire 1 p# Cout [1] $end
$var wire 1 q# Cout [0] $end
$var reg 16 r# product_ff [15:0] $end
$var reg 24 s# accumulator [23:0] $end
$var reg 8 t# ff_Ain [7:0] $end
$var reg 8 u# ff_Bin [7:0] $end
$var reg 8 v# ffff_Ain [7:0] $end
$var reg 8 w# ffff_Bin [7:0] $end
$var reg 1 x# ff_En $end
$var reg 1 y# ffff_En $end
$upscope $end
$upscope $end

$scope begin MAC_ARRAY[2] $end
$var parameter 32 z# i $end

$scope module u_mac $end
$var parameter 32 {# DATA_WIDTH $end
$var wire 1 i clk $end
$var wire 1 m rst_n $end
$var wire 1 |# En $end
$var wire 1 }# Clr $end
$var wire 1 ~# Ain [7] $end
$var wire 1 !$ Ain [6] $end
$var wire 1 "$ Ain [5] $end
$var wire 1 #$ Ain [4] $end
$var wire 1 $$ Ain [3] $end
$var wire 1 %$ Ain [2] $end
$var wire 1 &$ Ain [1] $end
$var wire 1 '$ Ain [0] $end
$var wire 1 ($ Bin [7] $end
$var wire 1 )$ Bin [6] $end
$var wire 1 *$ Bin [5] $end
$var wire 1 +$ Bin [4] $end
$var wire 1 ,$ Bin [3] $end
$var wire 1 -$ Bin [2] $end
$var wire 1 .$ Bin [1] $end
$var wire 1 /$ Bin [0] $end
$var wire 1 0$ Cout [23] $end
$var wire 1 1$ Cout [22] $end
$var wire 1 2$ Cout [21] $end
$var wire 1 3$ Cout [20] $end
$var wire 1 4$ Cout [19] $end
$var wire 1 5$ Cout [18] $end
$var wire 1 6$ Cout [17] $end
$var wire 1 7$ Cout [16] $end
$var wire 1 8$ Cout [15] $end
$var wire 1 9$ Cout [14] $end
$var wire 1 :$ Cout [13] $end
$var wire 1 ;$ Cout [12] $end
$var wire 1 <$ Cout [11] $end
$var wire 1 =$ Cout [10] $end
$var wire 1 >$ Cout [9] $end
$var wire 1 ?$ Cout [8] $end
$var wire 1 @$ Cout [7] $end
$var wire 1 A$ Cout [6] $end
$var wire 1 B$ Cout [5] $end
$var wire 1 C$ Cout [4] $end
$var wire 1 D$ Cout [3] $end
$var wire 1 E$ Cout [2] $end
$var wire 1 F$ Cout [1] $end
$var wire 1 G$ Cout [0] $end
$var reg 16 H$ product_ff [15:0] $end
$var reg 24 I$ accumulator [23:0] $end
$var reg 8 J$ ff_Ain [7:0] $end
$var reg 8 K$ ff_Bin [7:0] $end
$var reg 8 L$ ffff_Ain [7:0] $end
$var reg 8 M$ ffff_Bin [7:0] $end
$var reg 1 N$ ff_En $end
$var reg 1 O$ ffff_En $end
$upscope $end
$upscope $end

$scope begin MAC_ARRAY[1] $end
$var parameter 32 P$ i $end

$scope module u_mac $end
$var parameter 32 Q$ DATA_WIDTH $end
$var wire 1 i clk $end
$var wire 1 m rst_n $end
$var wire 1 R$ En $end
$var wire 1 S$ Clr $end
$var wire 1 T$ Ain [7] $end
$var wire 1 U$ Ain [6] $end
$var wire 1 V$ Ain [5] $end
$var wire 1 W$ Ain [4] $end
$var wire 1 X$ Ain [3] $end
$var wire 1 Y$ Ain [2] $end
$var wire 1 Z$ Ain [1] $end
$var wire 1 [$ Ain [0] $end
$var wire 1 \$ Bin [7] $end
$var wire 1 ]$ Bin [6] $end
$var wire 1 ^$ Bin [5] $end
$var wire 1 _$ Bin [4] $end
$var wire 1 `$ Bin [3] $end
$var wire 1 a$ Bin [2] $end
$var wire 1 b$ Bin [1] $end
$var wire 1 c$ Bin [0] $end
$var wire 1 d$ Cout [23] $end
$var wire 1 e$ Cout [22] $end
$var wire 1 f$ Cout [21] $end
$var wire 1 g$ Cout [20] $end
$var wire 1 h$ Cout [19] $end
$var wire 1 i$ Cout [18] $end
$var wire 1 j$ Cout [17] $end
$var wire 1 k$ Cout [16] $end
$var wire 1 l$ Cout [15] $end
$var wire 1 m$ Cout [14] $end
$var wire 1 n$ Cout [13] $end
$var wire 1 o$ Cout [12] $end
$var wire 1 p$ Cout [11] $end
$var wire 1 q$ Cout [10] $end
$var wire 1 r$ Cout [9] $end
$var wire 1 s$ Cout [8] $end
$var wire 1 t$ Cout [7] $end
$var wire 1 u$ Cout [6] $end
$var wire 1 v$ Cout [5] $end
$var wire 1 w$ Cout [4] $end
$var wire 1 x$ Cout [3] $end
$var wire 1 y$ Cout [2] $end
$var wire 1 z$ Cout [1] $end
$var wire 1 {$ Cout [0] $end
$var reg 16 |$ product_ff [15:0] $end
$var reg 24 }$ accumulator [23:0] $end
$var reg 8 ~$ ff_Ain [7:0] $end
$var reg 8 !% ff_Bin [7:0] $end
$var reg 8 "% ffff_Ain [7:0] $end
$var reg 8 #% ffff_Bin [7:0] $end
$var reg 1 $% ff_En $end
$var reg 1 %% ffff_En $end
$upscope $end
$upscope $end

$scope begin MAC_ARRAY[0] $end
$var parameter 32 &% i $end

$scope module u_mac $end
$var parameter 32 '% DATA_WIDTH $end
$var wire 1 i clk $end
$var wire 1 m rst_n $end
$var wire 1 (% En $end
$var wire 1 )% Clr $end
$var wire 1 *% Ain [7] $end
$var wire 1 +% Ain [6] $end
$var wire 1 ,% Ain [5] $end
$var wire 1 -% Ain [4] $end
$var wire 1 .% Ain [3] $end
$var wire 1 /% Ain [2] $end
$var wire 1 0% Ain [1] $end
$var wire 1 1% Ain [0] $end
$var wire 1 2% Bin [7] $end
$var wire 1 3% Bin [6] $end
$var wire 1 4% Bin [5] $end
$var wire 1 5% Bin [4] $end
$var wire 1 6% Bin [3] $end
$var wire 1 7% Bin [2] $end
$var wire 1 8% Bin [1] $end
$var wire 1 9% Bin [0] $end
$var wire 1 :% Cout [23] $end
$var wire 1 ;% Cout [22] $end
$var wire 1 <% Cout [21] $end
$var wire 1 =% Cout [20] $end
$var wire 1 >% Cout [19] $end
$var wire 1 ?% Cout [18] $end
$var wire 1 @% Cout [17] $end
$var wire 1 A% Cout [16] $end
$var wire 1 B% Cout [15] $end
$var wire 1 C% Cout [14] $end
$var wire 1 D% Cout [13] $end
$var wire 1 E% Cout [12] $end
$var wire 1 F% Cout [11] $end
$var wire 1 G% Cout [10] $end
$var wire 1 H% Cout [9] $end
$var wire 1 I% Cout [8] $end
$var wire 1 J% Cout [7] $end
$var wire 1 K% Cout [6] $end
$var wire 1 L% Cout [5] $end
$var wire 1 M% Cout [4] $end
$var wire 1 N% Cout [3] $end
$var wire 1 O% Cout [2] $end
$var wire 1 P% Cout [1] $end
$var wire 1 Q% Cout [0] $end
$var reg 16 R% product_ff [15:0] $end
$var reg 24 S% accumulator [23:0] $end
$var reg 8 T% ff_Ain [7:0] $end
$var reg 8 U% ff_Bin [7:0] $end
$var reg 8 V% ffff_Ain [7:0] $end
$var reg 8 W% ffff_Bin [7:0] $end
$var reg 1 X% ff_En $end
$var reg 1 Y% ffff_En $end
$upscope $end
$upscope $end

$scope begin A_FIFOS[7] $end
$var parameter 32 Z% i $end

$scope module fifoA $end
$var parameter 32 [% DEPTH $end
$var parameter 32 \% DATA_WIDTH $end
$var wire 1 i clk $end
$var wire 1 m rst_n $end
$var wire 1 ]% rden $end
$var wire 1 ^% wren $end
$var wire 1 _% i_data [7] $end
$var wire 1 `% i_data [6] $end
$var wire 1 a% i_data [5] $end
$var wire 1 b% i_data [4] $end
$var wire 1 c% i_data [3] $end
$var wire 1 d% i_data [2] $end
$var wire 1 e% i_data [1] $end
$var wire 1 f% i_data [0] $end
$var reg 8 g% o_data [7:0] $end
$var wire 1 h% full $end
$var wire 1 i% empty $end
$var reg 4 j% wr_ptr [3:0] $end
$var reg 4 k% rd_ptr [3:0] $end
$upscope $end
$upscope $end

$scope begin A_FIFOS[6] $end
$var parameter 32 l% i $end

$scope module fifoA $end
$var parameter 32 m% DEPTH $end
$var parameter 32 n% DATA_WIDTH $end
$var wire 1 i clk $end
$var wire 1 m rst_n $end
$var wire 1 o% rden $end
$var wire 1 p% wren $end
$var wire 1 q% i_data [7] $end
$var wire 1 r% i_data [6] $end
$var wire 1 s% i_data [5] $end
$var wire 1 t% i_data [4] $end
$var wire 1 u% i_data [3] $end
$var wire 1 v% i_data [2] $end
$var wire 1 w% i_data [1] $end
$var wire 1 x% i_data [0] $end
$var reg 8 y% o_data [7:0] $end
$var wire 1 z% full $end
$var wire 1 {% empty $end
$var reg 4 |% wr_ptr [3:0] $end
$var reg 4 }% rd_ptr [3:0] $end
$upscope $end
$upscope $end

$scope begin A_FIFOS[5] $end
$var parameter 32 ~% i $end

$scope module fifoA $end
$var parameter 32 !& DEPTH $end
$var parameter 32 "& DATA_WIDTH $end
$var wire 1 i clk $end
$var wire 1 m rst_n $end
$var wire 1 #& rden $end
$var wire 1 $& wren $end
$var wire 1 %& i_data [7] $end
$var wire 1 && i_data [6] $end
$var wire 1 '& i_data [5] $end
$var wire 1 (& i_data [4] $end
$var wire 1 )& i_data [3] $end
$var wire 1 *& i_data [2] $end
$var wire 1 +& i_data [1] $end
$var wire 1 ,& i_data [0] $end
$var reg 8 -& o_data [7:0] $end
$var wire 1 .& full $end
$var wire 1 /& empty $end
$var reg 4 0& wr_ptr [3:0] $end
$var reg 4 1& rd_ptr [3:0] $end
$upscope $end
$upscope $end

$scope begin A_FIFOS[4] $end
$var parameter 32 2& i $end

$scope module fifoA $end
$var parameter 32 3& DEPTH $end
$var parameter 32 4& DATA_WIDTH $end
$var wire 1 i clk $end
$var wire 1 m rst_n $end
$var wire 1 5& rden $end
$var wire 1 6& wren $end
$var wire 1 7& i_data [7] $end
$var wire 1 8& i_data [6] $end
$var wire 1 9& i_data [5] $end
$var wire 1 :& i_data [4] $end
$var wire 1 ;& i_data [3] $end
$var wire 1 <& i_data [2] $end
$var wire 1 =& i_data [1] $end
$var wire 1 >& i_data [0] $end
$var reg 8 ?& o_data [7:0] $end
$var wire 1 @& full $end
$var wire 1 A& empty $end
$var reg 4 B& wr_ptr [3:0] $end
$var reg 4 C& rd_ptr [3:0] $end
$upscope $end
$upscope $end

$scope begin A_FIFOS[3] $end
$var parameter 32 D& i $end

$scope module fifoA $end
$var parameter 32 E& DEPTH $end
$var parameter 32 F& DATA_WIDTH $end
$var wire 1 i clk $end
$var wire 1 m rst_n $end
$var wire 1 G& rden $end
$var wire 1 H& wren $end
$var wire 1 I& i_data [7] $end
$var wire 1 J& i_data [6] $end
$var wire 1 K& i_data [5] $end
$var wire 1 L& i_data [4] $end
$var wire 1 M& i_data [3] $end
$var wire 1 N& i_data [2] $end
$var wire 1 O& i_data [1] $end
$var wire 1 P& i_data [0] $end
$var reg 8 Q& o_data [7:0] $end
$var wire 1 R& full $end
$var wire 1 S& empty $end
$var reg 4 T& wr_ptr [3:0] $end
$var reg 4 U& rd_ptr [3:0] $end
$upscope $end
$upscope $end

$scope begin A_FIFOS[2] $end
$var parameter 32 V& i $end

$scope module fifoA $end
$var parameter 32 W& DEPTH $end
$var parameter 32 X& DATA_WIDTH $end
$var wire 1 i clk $end
$var wire 1 m rst_n $end
$var wire 1 Y& rden $end
$var wire 1 Z& wren $end
$var wire 1 [& i_data [7] $end
$var wire 1 \& i_data [6] $end
$var wire 1 ]& i_data [5] $end
$var wire 1 ^& i_data [4] $end
$var wire 1 _& i_data [3] $end
$var wire 1 `& i_data [2] $end
$var wire 1 a& i_data [1] $end
$var wire 1 b& i_data [0] $end
$var reg 8 c& o_data [7:0] $end
$var wire 1 d& full $end
$var wire 1 e& empty $end
$var reg 4 f& wr_ptr [3:0] $end
$var reg 4 g& rd_ptr [3:0] $end
$upscope $end
$upscope $end

$scope begin A_FIFOS[1] $end
$var parameter 32 h& i $end

$scope module fifoA $end
$var parameter 32 i& DEPTH $end
$var parameter 32 j& DATA_WIDTH $end
$var wire 1 i clk $end
$var wire 1 m rst_n $end
$var wire 1 k& rden $end
$var wire 1 l& wren $end
$var wire 1 m& i_data [7] $end
$var wire 1 n& i_data [6] $end
$var wire 1 o& i_data [5] $end
$var wire 1 p& i_data [4] $end
$var wire 1 q& i_data [3] $end
$var wire 1 r& i_data [2] $end
$var wire 1 s& i_data [1] $end
$var wire 1 t& i_data [0] $end
$var reg 8 u& o_data [7:0] $end
$var wire 1 v& full $end
$var wire 1 w& empty $end
$var reg 4 x& wr_ptr [3:0] $end
$var reg 4 y& rd_ptr [3:0] $end
$upscope $end
$upscope $end

$scope begin A_FIFOS[0] $end
$var parameter 32 z& i $end

$scope module fifoA $end
$var parameter 32 {& DEPTH $end
$var parameter 32 |& DATA_WIDTH $end
$var wire 1 i clk $end
$var wire 1 m rst_n $end
$var wire 1 }& rden $end
$var wire 1 ~& wren $end
$var wire 1 !' i_data [7] $end
$var wire 1 "' i_data [6] $end
$var wire 1 #' i_data [5] $end
$var wire 1 $' i_data [4] $end
$var wire 1 %' i_data [3] $end
$var wire 1 &' i_data [2] $end
$var wire 1 '' i_data [1] $end
$var wire 1 (' i_data [0] $end
$var reg 8 )' o_data [7:0] $end
$var wire 1 *' full $end
$var wire 1 +' empty $end
$var reg 4 ,' wr_ptr [3:0] $end
$var reg 4 -' rd_ptr [3:0] $end
$upscope $end
$upscope $end

$scope module u_mem $end
$var parameter 2 .' IDLE $end
$var parameter 2 /' WAIT $end
$var parameter 2 0' RESPOND $end
$var wire 1 i clk $end
$var wire 1 m reset_n $end
$var wire 1 1' address [31] $end
$var wire 1 2' address [30] $end
$var wire 1 3' address [29] $end
$var wire 1 4' address [28] $end
$var wire 1 5' address [27] $end
$var wire 1 6' address [26] $end
$var wire 1 7' address [25] $end
$var wire 1 8' address [24] $end
$var wire 1 9' address [23] $end
$var wire 1 :' address [22] $end
$var wire 1 ;' address [21] $end
$var wire 1 <' address [20] $end
$var wire 1 =' address [19] $end
$var wire 1 >' address [18] $end
$var wire 1 ?' address [17] $end
$var wire 1 @' address [16] $end
$var wire 1 A' address [15] $end
$var wire 1 B' address [14] $end
$var wire 1 C' address [13] $end
$var wire 1 D' address [12] $end
$var wire 1 E' address [11] $end
$var wire 1 F' address [10] $end
$var wire 1 G' address [9] $end
$var wire 1 H' address [8] $end
$var wire 1 I' address [7] $end
$var wire 1 J' address [6] $end
$var wire 1 K' address [5] $end
$var wire 1 L' address [4] $end
$var wire 1 M' address [3] $end
$var wire 1 N' address [2] $end
$var wire 1 O' address [1] $end
$var wire 1 P' address [0] $end
$var wire 1 Q' read $end
$var reg 64 R' readdata [63:0] $end
$var reg 1 S' readdatavalid $end
$var reg 1 T' waitrequest $end
$var wire 1 U' mem_rdata [63] $end
$var wire 1 V' mem_rdata [62] $end
$var wire 1 W' mem_rdata [61] $end
$var wire 1 X' mem_rdata [60] $end
$var wire 1 Y' mem_rdata [59] $end
$var wire 1 Z' mem_rdata [58] $end
$var wire 1 [' mem_rdata [57] $end
$var wire 1 \' mem_rdata [56] $end
$var wire 1 ]' mem_rdata [55] $end
$var wire 1 ^' mem_rdata [54] $end
$var wire 1 _' mem_rdata [53] $end
$var wire 1 `' mem_rdata [52] $end
$var wire 1 a' mem_rdata [51] $end
$var wire 1 b' mem_rdata [50] $end
$var wire 1 c' mem_rdata [49] $end
$var wire 1 d' mem_rdata [48] $end
$var wire 1 e' mem_rdata [47] $end
$var wire 1 f' mem_rdata [46] $end
$var wire 1 g' mem_rdata [45] $end
$var wire 1 h' mem_rdata [44] $end
$var wire 1 i' mem_rdata [43] $end
$var wire 1 j' mem_rdata [42] $end
$var wire 1 k' mem_rdata [41] $end
$var wire 1 l' mem_rdata [40] $end
$var wire 1 m' mem_rdata [39] $end
$var wire 1 n' mem_rdata [38] $end
$var wire 1 o' mem_rdata [37] $end
$var wire 1 p' mem_rdata [36] $end
$var wire 1 q' mem_rdata [35] $end
$var wire 1 r' mem_rdata [34] $end
$var wire 1 s' mem_rdata [33] $end
$var wire 1 t' mem_rdata [32] $end
$var wire 1 u' mem_rdata [31] $end
$var wire 1 v' mem_rdata [30] $end
$var wire 1 w' mem_rdata [29] $end
$var wire 1 x' mem_rdata [28] $end
$var wire 1 y' mem_rdata [27] $end
$var wire 1 z' mem_rdata [26] $end
$var wire 1 {' mem_rdata [25] $end
$var wire 1 |' mem_rdata [24] $end
$var wire 1 }' mem_rdata [23] $end
$var wire 1 ~' mem_rdata [22] $end
$var wire 1 !( mem_rdata [21] $end
$var wire 1 "( mem_rdata [20] $end
$var wire 1 #( mem_rdata [19] $end
$var wire 1 $( mem_rdata [18] $end
$var wire 1 %( mem_rdata [17] $end
$var wire 1 &( mem_rdata [16] $end
$var wire 1 '( mem_rdata [15] $end
$var wire 1 (( mem_rdata [14] $end
$var wire 1 )( mem_rdata [13] $end
$var wire 1 *( mem_rdata [12] $end
$var wire 1 +( mem_rdata [11] $end
$var wire 1 ,( mem_rdata [10] $end
$var wire 1 -( mem_rdata [9] $end
$var wire 1 .( mem_rdata [8] $end
$var wire 1 /( mem_rdata [7] $end
$var wire 1 0( mem_rdata [6] $end
$var wire 1 1( mem_rdata [5] $end
$var wire 1 2( mem_rdata [4] $end
$var wire 1 3( mem_rdata [3] $end
$var wire 1 4( mem_rdata [2] $end
$var wire 1 5( mem_rdata [1] $end
$var wire 1 6( mem_rdata [0] $end
$var reg 5 7( read_address [4:0] $end
$var reg 4 8( delay_counter [3:0] $end
$var reg 2 9( state [1:0] $end

$scope module memory $end
$var wire 1 :( address [3] $end
$var wire 1 ;( address [2] $end
$var wire 1 <( address [1] $end
$var wire 1 =( address [0] $end
$var tri1 1 i clock $end
$var wire 1 U' q [63] $end
$var wire 1 V' q [62] $end
$var wire 1 W' q [61] $end
$var wire 1 X' q [60] $end
$var wire 1 Y' q [59] $end
$var wire 1 Z' q [58] $end
$var wire 1 [' q [57] $end
$var wire 1 \' q [56] $end
$var wire 1 ]' q [55] $end
$var wire 1 ^' q [54] $end
$var wire 1 _' q [53] $end
$var wire 1 `' q [52] $end
$var wire 1 a' q [51] $end
$var wire 1 b' q [50] $end
$var wire 1 c' q [49] $end
$var wire 1 d' q [48] $end
$var wire 1 e' q [47] $end
$var wire 1 f' q [46] $end
$var wire 1 g' q [45] $end
$var wire 1 h' q [44] $end
$var wire 1 i' q [43] $end
$var wire 1 j' q [42] $end
$var wire 1 k' q [41] $end
$var wire 1 l' q [40] $end
$var wire 1 m' q [39] $end
$var wire 1 n' q [38] $end
$var wire 1 o' q [37] $end
$var wire 1 p' q [36] $end
$var wire 1 q' q [35] $end
$var wire 1 r' q [34] $end
$var wire 1 s' q [33] $end
$var wire 1 t' q [32] $end
$var wire 1 u' q [31] $end
$var wire 1 v' q [30] $end
$var wire 1 w' q [29] $end
$var wire 1 x' q [28] $end
$var wire 1 y' q [27] $end
$var wire 1 z' q [26] $end
$var wire 1 {' q [25] $end
$var wire 1 |' q [24] $end
$var wire 1 }' q [23] $end
$var wire 1 ~' q [22] $end
$var wire 1 !( q [21] $end
$var wire 1 "( q [20] $end
$var wire 1 #( q [19] $end
$var wire 1 $( q [18] $end
$var wire 1 %( q [17] $end
$var wire 1 &( q [16] $end
$var wire 1 '( q [15] $end
$var wire 1 (( q [14] $end
$var wire 1 )( q [13] $end
$var wire 1 *( q [12] $end
$var wire 1 +( q [11] $end
$var wire 1 ,( q [10] $end
$var wire 1 -( q [9] $end
$var wire 1 .( q [8] $end
$var wire 1 /( q [7] $end
$var wire 1 0( q [6] $end
$var wire 1 1( q [5] $end
$var wire 1 2( q [4] $end
$var wire 1 3( q [3] $end
$var wire 1 4( q [2] $end
$var wire 1 5( q [1] $end
$var wire 1 6( q [0] $end
$var wire 1 >( sub_wire0 [63] $end
$var wire 1 ?( sub_wire0 [62] $end
$var wire 1 @( sub_wire0 [61] $end
$var wire 1 A( sub_wire0 [60] $end
$var wire 1 B( sub_wire0 [59] $end
$var wire 1 C( sub_wire0 [58] $end
$var wire 1 D( sub_wire0 [57] $end
$var wire 1 E( sub_wire0 [56] $end
$var wire 1 F( sub_wire0 [55] $end
$var wire 1 G( sub_wire0 [54] $end
$var wire 1 H( sub_wire0 [53] $end
$var wire 1 I( sub_wire0 [52] $end
$var wire 1 J( sub_wire0 [51] $end
$var wire 1 K( sub_wire0 [50] $end
$var wire 1 L( sub_wire0 [49] $end
$var wire 1 M( sub_wire0 [48] $end
$var wire 1 N( sub_wire0 [47] $end
$var wire 1 O( sub_wire0 [46] $end
$var wire 1 P( sub_wire0 [45] $end
$var wire 1 Q( sub_wire0 [44] $end
$var wire 1 R( sub_wire0 [43] $end
$var wire 1 S( sub_wire0 [42] $end
$var wire 1 T( sub_wire0 [41] $end
$var wire 1 U( sub_wire0 [40] $end
$var wire 1 V( sub_wire0 [39] $end
$var wire 1 W( sub_wire0 [38] $end
$var wire 1 X( sub_wire0 [37] $end
$var wire 1 Y( sub_wire0 [36] $end
$var wire 1 Z( sub_wire0 [35] $end
$var wire 1 [( sub_wire0 [34] $end
$var wire 1 \( sub_wire0 [33] $end
$var wire 1 ]( sub_wire0 [32] $end
$var wire 1 ^( sub_wire0 [31] $end
$var wire 1 _( sub_wire0 [30] $end
$var wire 1 `( sub_wire0 [29] $end
$var wire 1 a( sub_wire0 [28] $end
$var wire 1 b( sub_wire0 [27] $end
$var wire 1 c( sub_wire0 [26] $end
$var wire 1 d( sub_wire0 [25] $end
$var wire 1 e( sub_wire0 [24] $end
$var wire 1 f( sub_wire0 [23] $end
$var wire 1 g( sub_wire0 [22] $end
$var wire 1 h( sub_wire0 [21] $end
$var wire 1 i( sub_wire0 [20] $end
$var wire 1 j( sub_wire0 [19] $end
$var wire 1 k( sub_wire0 [18] $end
$var wire 1 l( sub_wire0 [17] $end
$var wire 1 m( sub_wire0 [16] $end
$var wire 1 n( sub_wire0 [15] $end
$var wire 1 o( sub_wire0 [14] $end
$var wire 1 p( sub_wire0 [13] $end
$var wire 1 q( sub_wire0 [12] $end
$var wire 1 r( sub_wire0 [11] $end
$var wire 1 s( sub_wire0 [10] $end
$var wire 1 t( sub_wire0 [9] $end
$var wire 1 u( sub_wire0 [8] $end
$var wire 1 v( sub_wire0 [7] $end
$var wire 1 w( sub_wire0 [6] $end
$var wire 1 x( sub_wire0 [5] $end
$var wire 1 y( sub_wire0 [4] $end
$var wire 1 z( sub_wire0 [3] $end
$var wire 1 {( sub_wire0 [2] $end
$var wire 1 |( sub_wire0 [1] $end
$var wire 1 }( sub_wire0 [0] $end

$scope module altsyncram_component $end
$var parameter 32 ~( width_a $end
$var parameter 32 !) widthad_a $end
$var parameter 32 ") numwords_a $end
$var parameter 96 #) outdata_reg_a $end
$var parameter 32 $) address_aclr_a $end
$var parameter 32 %) outdata_aclr_a $end
$var parameter 32 &) indata_aclr_a $end
$var parameter 32 ') wrcontrol_aclr_a $end
$var parameter 32 () byteena_aclr_a $end
$var parameter 32 )) width_byteena_a $end
$var parameter 32 *) width_b $end
$var parameter 32 +) widthad_b $end
$var parameter 32 ,) numwords_b $end
$var parameter 48 -) rdcontrol_reg_b $end
$var parameter 48 .) address_reg_b $end
$var parameter 96 /) outdata_reg_b $end
$var parameter 32 0) outdata_aclr_b $end
$var parameter 32 1) rdcontrol_aclr_b $end
$var parameter 48 2) indata_reg_b $end
$var parameter 48 3) wrcontrol_wraddress_reg_b $end
$var parameter 48 4) byteena_reg_b $end
$var parameter 32 5) indata_aclr_b $end
$var parameter 32 6) wrcontrol_aclr_b $end
$var parameter 32 7) address_aclr_b $end
$var parameter 32 8) byteena_aclr_b $end
$var parameter 32 9) width_byteena_b $end
$var parameter 48 :) clock_enable_input_a $end
$var parameter 48 ;) clock_enable_output_a $end
$var parameter 48 <) clock_enable_input_b $end
$var parameter 48 =) clock_enable_output_b $end
$var parameter 120 >) clock_enable_core_a $end
$var parameter 120 ?) clock_enable_core_b $end
$var parameter 160 @) read_during_write_mode_port_a $end
$var parameter 160 A) read_during_write_mode_port_b $end
$var parameter 40 B) enable_ecc $end
$var parameter 32 C) width_eccstatus $end
$var parameter 40 D) ecc_pipeline_stage_enabled $end
$var parameter 24 E) operation_mode $end
$var parameter 32 F) byte_size $end
$var parameter 72 G) read_during_write_mode_mixed_ports $end
$var parameter 32 H) ram_block_type $end
$var parameter 104 I) init_file $end
$var parameter 48 J) init_file_layout $end
$var parameter 32 K) maximum_depth $end
$var parameter 72 L) intended_device_family $end
$var parameter 168 M) lpm_hint $end
$var parameter 80 N) lpm_type $end
$var parameter 24 O) implement_in_les $end
$var parameter 40 P) power_up_uninitialized $end
$var parameter 32 Q) family_arria10 $end
$var tri0 1 R) wren_a $end
$var tri0 1 S) wren_b $end
$var tri1 1 T) rden_a $end
$var tri1 1 U) rden_b $end
$var wire 1 V) data_a [63] $end
$var wire 1 W) data_a [62] $end
$var wire 1 X) data_a [61] $end
$var wire 1 Y) data_a [60] $end
$var wire 1 Z) data_a [59] $end
$var wire 1 [) data_a [58] $end
$var wire 1 \) data_a [57] $end
$var wire 1 ]) data_a [56] $end
$var wire 1 ^) data_a [55] $end
$var wire 1 _) data_a [54] $end
$var wire 1 `) data_a [53] $end
$var wire 1 a) data_a [52] $end
$var wire 1 b) data_a [51] $end
$var wire 1 c) data_a [50] $end
$var wire 1 d) data_a [49] $end
$var wire 1 e) data_a [48] $end
$var wire 1 f) data_a [47] $end
$var wire 1 g) data_a [46] $end
$var wire 1 h) data_a [45] $end
$var wire 1 i) data_a [44] $end
$var wire 1 j) data_a [43] $end
$var wire 1 k) data_a [42] $end
$var wire 1 l) data_a [41] $end
$var wire 1 m) data_a [40] $end
$var wire 1 n) data_a [39] $end
$var wire 1 o) data_a [38] $end
$var wire 1 p) data_a [37] $end
$var wire 1 q) data_a [36] $end
$var wire 1 r) data_a [35] $end
$var wire 1 s) data_a [34] $end
$var wire 1 t) data_a [33] $end
$var wire 1 u) data_a [32] $end
$var wire 1 v) data_a [31] $end
$var wire 1 w) data_a [30] $end
$var wire 1 x) data_a [29] $end
$var wire 1 y) data_a [28] $end
$var wire 1 z) data_a [27] $end
$var wire 1 {) data_a [26] $end
$var wire 1 |) data_a [25] $end
$var wire 1 }) data_a [24] $end
$var wire 1 ~) data_a [23] $end
$var wire 1 !* data_a [22] $end
$var wire 1 "* data_a [21] $end
$var wire 1 #* data_a [20] $end
$var wire 1 $* data_a [19] $end
$var wire 1 %* data_a [18] $end
$var wire 1 &* data_a [17] $end
$var wire 1 '* data_a [16] $end
$var wire 1 (* data_a [15] $end
$var wire 1 )* data_a [14] $end
$var wire 1 ** data_a [13] $end
$var wire 1 +* data_a [12] $end
$var wire 1 ,* data_a [11] $end
$var wire 1 -* data_a [10] $end
$var wire 1 .* data_a [9] $end
$var wire 1 /* data_a [8] $end
$var wire 1 0* data_a [7] $end
$var wire 1 1* data_a [6] $end
$var wire 1 2* data_a [5] $end
$var wire 1 3* data_a [4] $end
$var wire 1 4* data_a [3] $end
$var wire 1 5* data_a [2] $end
$var wire 1 6* data_a [1] $end
$var wire 1 7* data_a [0] $end
$var wire 1 8* data_b [0] $end
$var wire 1 :( address_a [3] $end
$var wire 1 ;( address_a [2] $end
$var wire 1 <( address_a [1] $end
$var wire 1 =( address_a [0] $end
$var wire 1 9* address_b [0] $end
$var tri1 1 i clock0 $end
$var wire 1 :* clock1 $end
$var tri1 1 ;* clocken0 $end
$var tri1 1 <* clocken1 $end
$var tri1 1 =* clocken2 $end
$var tri1 1 >* clocken3 $end
$var tri0 1 ?* aclr0 $end
$var tri0 1 @* aclr1 $end
$var tri1 1 A* byteena_a [0] $end
$var tri1 1 B* byteena_b [0] $end
$var tri0 1 C* addressstall_a $end
$var tri0 1 D* addressstall_b $end
$var wire 1 >( q_a [63] $end
$var wire 1 ?( q_a [62] $end
$var wire 1 @( q_a [61] $end
$var wire 1 A( q_a [60] $end
$var wire 1 B( q_a [59] $end
$var wire 1 C( q_a [58] $end
$var wire 1 D( q_a [57] $end
$var wire 1 E( q_a [56] $end
$var wire 1 F( q_a [55] $end
$var wire 1 G( q_a [54] $end
$var wire 1 H( q_a [53] $end
$var wire 1 I( q_a [52] $end
$var wire 1 J( q_a [51] $end
$var wire 1 K( q_a [50] $end
$var wire 1 L( q_a [49] $end
$var wire 1 M( q_a [48] $end
$var wire 1 N( q_a [47] $end
$var wire 1 O( q_a [46] $end
$var wire 1 P( q_a [45] $end
$var wire 1 Q( q_a [44] $end
$var wire 1 R( q_a [43] $end
$var wire 1 S( q_a [42] $end
$var wire 1 T( q_a [41] $end
$var wire 1 U( q_a [40] $end
$var wire 1 V( q_a [39] $end
$var wire 1 W( q_a [38] $end
$var wire 1 X( q_a [37] $end
$var wire 1 Y( q_a [36] $end
$var wire 1 Z( q_a [35] $end
$var wire 1 [( q_a [34] $end
$var wire 1 \( q_a [33] $end
$var wire 1 ]( q_a [32] $end
$var wire 1 ^( q_a [31] $end
$var wire 1 _( q_a [30] $end
$var wire 1 `( q_a [29] $end
$var wire 1 a( q_a [28] $end
$var wire 1 b( q_a [27] $end
$var wire 1 c( q_a [26] $end
$var wire 1 d( q_a [25] $end
$var wire 1 e( q_a [24] $end
$var wire 1 f( q_a [23] $end
$var wire 1 g( q_a [22] $end
$var wire 1 h( q_a [21] $end
$var wire 1 i( q_a [20] $end
$var wire 1 j( q_a [19] $end
$var wire 1 k( q_a [18] $end
$var wire 1 l( q_a [17] $end
$var wire 1 m( q_a [16] $end
$var wire 1 n( q_a [15] $end
$var wire 1 o( q_a [14] $end
$var wire 1 p( q_a [13] $end
$var wire 1 q( q_a [12] $end
$var wire 1 r( q_a [11] $end
$var wire 1 s( q_a [10] $end
$var wire 1 t( q_a [9] $end
$var wire 1 u( q_a [8] $end
$var wire 1 v( q_a [7] $end
$var wire 1 w( q_a [6] $end
$var wire 1 x( q_a [5] $end
$var wire 1 y( q_a [4] $end
$var wire 1 z( q_a [3] $end
$var wire 1 {( q_a [2] $end
$var wire 1 |( q_a [1] $end
$var wire 1 }( q_a [0] $end
$var wire 1 E* q_b [0] $end
$var wire 1 F* eccstatus [2] $end
$var wire 1 G* eccstatus [1] $end
$var wire 1 H* eccstatus [0] $end

$scope begin m_default $end

$scope module altsyncram_inst $end
$var parameter 32 I* width_a $end
$var parameter 32 J* widthad_a $end
$var parameter 32 K* numwords_a $end
$var parameter 96 L* outdata_reg_a $end
$var parameter 32 M* address_aclr_a $end
$var parameter 32 N* outdata_aclr_a $end
$var parameter 32 O* indata_aclr_a $end
$var parameter 32 P* wrcontrol_aclr_a $end
$var parameter 32 Q* byteena_aclr_a $end
$var parameter 32 R* width_byteena_a $end
$var parameter 32 S* width_b $end
$var parameter 32 T* widthad_b $end
$var parameter 32 U* numwords_b $end
$var parameter 48 V* rdcontrol_reg_b $end
$var parameter 48 W* address_reg_b $end
$var parameter 96 X* outdata_reg_b $end
$var parameter 32 Y* outdata_aclr_b $end
$var parameter 32 Z* rdcontrol_aclr_b $end
$var parameter 48 [* indata_reg_b $end
$var parameter 48 \* wrcontrol_wraddress_reg_b $end
$var parameter 48 ]* byteena_reg_b $end
$var parameter 32 ^* indata_aclr_b $end
$var parameter 32 _* wrcontrol_aclr_b $end
$var parameter 32 `* address_aclr_b $end
$var parameter 32 a* byteena_aclr_b $end
$var parameter 32 b* width_byteena_b $end
$var parameter 48 c* clock_enable_input_a $end
$var parameter 48 d* clock_enable_output_a $end
$var parameter 48 e* clock_enable_input_b $end
$var parameter 48 f* clock_enable_output_b $end
$var parameter 120 g* clock_enable_core_a $end
$var parameter 120 h* clock_enable_core_b $end
$var parameter 160 i* read_during_write_mode_port_a $end
$var parameter 160 j* read_during_write_mode_port_b $end
$var parameter 40 k* enable_ecc $end
$var parameter 32 l* width_eccstatus $end
$var parameter 40 m* ecc_pipeline_stage_enabled $end
$var parameter 24 n* operation_mode $end
$var parameter 32 o* byte_size $end
$var parameter 72 p* read_during_write_mode_mixed_ports $end
$var parameter 32 q* ram_block_type $end
$var parameter 104 r* init_file $end
$var parameter 48 s* init_file_layout $end
$var parameter 32 t* maximum_depth $end
$var parameter 72 u* intended_device_family $end
$var parameter 168 v* lpm_hint $end
$var parameter 80 w* lpm_type $end
$var parameter 24 x* implement_in_les $end
$var parameter 40 y* power_up_uninitialized $end
$var parameter 24 z* sim_show_memory_data_in_port_b_layout $end
$var parameter 32 {* is_lutram $end
$var parameter 32 |* is_bidir_and_wrcontrol_addb_clk0 $end
$var parameter 32 }* is_bidir_and_wrcontrol_addb_clk1 $end
$var parameter 32 ~* check_simultaneous_read_write $end
$var parameter 32 !+ dual_port_addreg_b_clk0 $end
$var parameter 32 "+ dual_port_addreg_b_clk1 $end
$var parameter 32 #+ i_byte_size_tmp $end
$var parameter 32 $+ i_lutram_read $end
$var parameter 32 %+ enable_mem_data_b_reading $end
$var parameter 32 &+ family_arriav $end
$var parameter 32 '+ family_cyclonev $end
$var parameter 32 (+ family_base_arriav $end
$var parameter 32 )+ family_arria10 $end
$var parameter 32 *+ family_stratix10 $end
$var parameter 32 ++ family_arriavi $end
$var parameter 32 ,+ family_nightfury $end
$var parameter 32 -+ family_arriavgz $end
$var parameter 32 .+ family_stratixv $end
$var parameter 32 /+ family_hardcopyiv $end
$var parameter 32 0+ family_hardcopyiii $end
$var parameter 32 1+ family_hardcopyii $end
$var parameter 32 2+ family_arriaiigz $end
$var parameter 32 3+ family_arriaiigx $end
$var parameter 32 4+ family_stratixiii $end
$var parameter 32 5+ family_zippleback $end
$var parameter 32 6+ family_cycloneiii $end
$var parameter 32 7+ family_cyclone $end
$var parameter 32 8+ family_base_cycloneii $end
$var parameter 32 9+ family_cycloneii $end
$var parameter 32 :+ family_base_stratix $end
$var parameter 32 ;+ family_base_stratixii $end
$var parameter 32 <+ family_has_lutram $end
$var parameter 32 =+ family_has_stratixv_style_ram $end
$var parameter 32 >+ family_has_stratixiii_style_ram $end
$var parameter 32 ?+ family_has_m512 $end
$var parameter 32 @+ family_has_megaram $end
$var parameter 32 A+ family_has_stratixi_style_ram $end
$var parameter 32 B+ is_write_on_positive_edge $end
$var parameter 32 C+ lutram_single_port_fast_read $end
$var parameter 32 D+ lutram_dual_port_fast_read $end
$var parameter 32 E+ s3_address_aclr_a $end
$var parameter 32 F+ s3_address_aclr_b $end
$var parameter 32 G+ i_address_aclr_family_a $end
$var parameter 32 H+ i_address_aclr_family_b $end
$var tri0 1 R) wren_a $end
$var tri0 1 S) wren_b $end
$var tri1 1 T) rden_a $end
$var tri1 1 U) rden_b $end
$var wire 1 V) data_a [63] $end
$var wire 1 W) data_a [62] $end
$var wire 1 X) data_a [61] $end
$var wire 1 Y) data_a [60] $end
$var wire 1 Z) data_a [59] $end
$var wire 1 [) data_a [58] $end
$var wire 1 \) data_a [57] $end
$var wire 1 ]) data_a [56] $end
$var wire 1 ^) data_a [55] $end
$var wire 1 _) data_a [54] $end
$var wire 1 `) data_a [53] $end
$var wire 1 a) data_a [52] $end
$var wire 1 b) data_a [51] $end
$var wire 1 c) data_a [50] $end
$var wire 1 d) data_a [49] $end
$var wire 1 e) data_a [48] $end
$var wire 1 f) data_a [47] $end
$var wire 1 g) data_a [46] $end
$var wire 1 h) data_a [45] $end
$var wire 1 i) data_a [44] $end
$var wire 1 j) data_a [43] $end
$var wire 1 k) data_a [42] $end
$var wire 1 l) data_a [41] $end
$var wire 1 m) data_a [40] $end
$var wire 1 n) data_a [39] $end
$var wire 1 o) data_a [38] $end
$var wire 1 p) data_a [37] $end
$var wire 1 q) data_a [36] $end
$var wire 1 r) data_a [35] $end
$var wire 1 s) data_a [34] $end
$var wire 1 t) data_a [33] $end
$var wire 1 u) data_a [32] $end
$var wire 1 v) data_a [31] $end
$var wire 1 w) data_a [30] $end
$var wire 1 x) data_a [29] $end
$var wire 1 y) data_a [28] $end
$var wire 1 z) data_a [27] $end
$var wire 1 {) data_a [26] $end
$var wire 1 |) data_a [25] $end
$var wire 1 }) data_a [24] $end
$var wire 1 ~) data_a [23] $end
$var wire 1 !* data_a [22] $end
$var wire 1 "* data_a [21] $end
$var wire 1 #* data_a [20] $end
$var wire 1 $* data_a [19] $end
$var wire 1 %* data_a [18] $end
$var wire 1 &* data_a [17] $end
$var wire 1 '* data_a [16] $end
$var wire 1 (* data_a [15] $end
$var wire 1 )* data_a [14] $end
$var wire 1 ** data_a [13] $end
$var wire 1 +* data_a [12] $end
$var wire 1 ,* data_a [11] $end
$var wire 1 -* data_a [10] $end
$var wire 1 .* data_a [9] $end
$var wire 1 /* data_a [8] $end
$var wire 1 0* data_a [7] $end
$var wire 1 1* data_a [6] $end
$var wire 1 2* data_a [5] $end
$var wire 1 3* data_a [4] $end
$var wire 1 4* data_a [3] $end
$var wire 1 5* data_a [2] $end
$var wire 1 6* data_a [1] $end
$var wire 1 7* data_a [0] $end
$var wire 1 8* data_b [0] $end
$var wire 1 :( address_a [3] $end
$var wire 1 ;( address_a [2] $end
$var wire 1 <( address_a [1] $end
$var wire 1 =( address_a [0] $end
$var wire 1 9* address_b [0] $end
$var tri1 1 i clock0 $end
$var wire 1 :* clock1 $end
$var tri1 1 ;* clocken0 $end
$var tri1 1 <* clocken1 $end
$var tri1 1 =* clocken2 $end
$var tri1 1 >* clocken3 $end
$var tri0 1 ?* aclr0 $end
$var tri0 1 @* aclr1 $end
$var wire 1 A* byteena_a [0] $end
$var wire 1 B* byteena_b [0] $end
$var tri0 1 C* addressstall_a $end
$var tri0 1 D* addressstall_b $end
$var wire 1 >( q_a [63] $end
$var wire 1 ?( q_a [62] $end
$var wire 1 @( q_a [61] $end
$var wire 1 A( q_a [60] $end
$var wire 1 B( q_a [59] $end
$var wire 1 C( q_a [58] $end
$var wire 1 D( q_a [57] $end
$var wire 1 E( q_a [56] $end
$var wire 1 F( q_a [55] $end
$var wire 1 G( q_a [54] $end
$var wire 1 H( q_a [53] $end
$var wire 1 I( q_a [52] $end
$var wire 1 J( q_a [51] $end
$var wire 1 K( q_a [50] $end
$var wire 1 L( q_a [49] $end
$var wire 1 M( q_a [48] $end
$var wire 1 N( q_a [47] $end
$var wire 1 O( q_a [46] $end
$var wire 1 P( q_a [45] $end
$var wire 1 Q( q_a [44] $end
$var wire 1 R( q_a [43] $end
$var wire 1 S( q_a [42] $end
$var wire 1 T( q_a [41] $end
$var wire 1 U( q_a [40] $end
$var wire 1 V( q_a [39] $end
$var wire 1 W( q_a [38] $end
$var wire 1 X( q_a [37] $end
$var wire 1 Y( q_a [36] $end
$var wire 1 Z( q_a [35] $end
$var wire 1 [( q_a [34] $end
$var wire 1 \( q_a [33] $end
$var wire 1 ]( q_a [32] $end
$var wire 1 ^( q_a [31] $end
$var wire 1 _( q_a [30] $end
$var wire 1 `( q_a [29] $end
$var wire 1 a( q_a [28] $end
$var wire 1 b( q_a [27] $end
$var wire 1 c( q_a [26] $end
$var wire 1 d( q_a [25] $end
$var wire 1 e( q_a [24] $end
$var wire 1 f( q_a [23] $end
$var wire 1 g( q_a [22] $end
$var wire 1 h( q_a [21] $end
$var wire 1 i( q_a [20] $end
$var wire 1 j( q_a [19] $end
$var wire 1 k( q_a [18] $end
$var wire 1 l( q_a [17] $end
$var wire 1 m( q_a [16] $end
$var wire 1 n( q_a [15] $end
$var wire 1 o( q_a [14] $end
$var wire 1 p( q_a [13] $end
$var wire 1 q( q_a [12] $end
$var wire 1 r( q_a [11] $end
$var wire 1 s( q_a [10] $end
$var wire 1 t( q_a [9] $end
$var wire 1 u( q_a [8] $end
$var wire 1 v( q_a [7] $end
$var wire 1 w( q_a [6] $end
$var wire 1 x( q_a [5] $end
$var wire 1 y( q_a [4] $end
$var wire 1 z( q_a [3] $end
$var wire 1 {( q_a [2] $end
$var wire 1 |( q_a [1] $end
$var wire 1 }( q_a [0] $end
$var wire 1 E* q_b [0] $end
$var wire 1 F* eccstatus [2] $end
$var wire 1 G* eccstatus [1] $end
$var wire 1 H* eccstatus [0] $end
$var reg 64 I+ i_data_reg_a [63:0] $end
$var reg 64 J+ temp_wa [63:0] $end
$var reg 64 K+ temp_wa2 [63:0] $end
$var reg 64 L+ temp_wa2b [63:0] $end
$var reg 64 M+ init_temp [63:0] $end
$var reg 1 N+ i_data_reg_b [0:0] $end
$var reg 1 O+ temp_wb [0:0] $end
$var reg 1 P+ temp_wb2 [0:0] $end
$var reg 1 Q+ temp $end
$var reg 64 R+ i_q_reg_a [63:0] $end
$var reg 64 S+ i_q_tmp_a [63:0] $end
$var reg 64 T+ i_q_tmp2_a [63:0] $end
$var reg 1 U+ i_q_reg_b [0:0] $end
$var reg 1 V+ i_q_tmp_b [0:0] $end
$var reg 1 W+ i_q_tmp2_b [0:0] $end
$var reg 1 X+ i_q_output_latch [0:0] $end
$var reg 64 Y+ i_byteena_mask_reg_a [63:0] $end
$var reg 1 Z+ i_byteena_mask_reg_b [0:0] $end
$var reg 4 [+ i_address_reg_a [3:0] $end
$var reg 1 \+ i_address_reg_b [0:0] $end
$var reg 1 ]+ i_q_ecc_reg_b [0:0] $end
$var reg 1 ^+ i_q_ecc_tmp_b [0:0] $end
$var reg 4 _+ i_original_address_a [3:0] $end
$var reg 64 `+ i_byteena_mask_reg_a_tmp [63:0] $end
$var reg 1 a+ i_byteena_mask_reg_b_tmp [0:0] $end
$var reg 64 b+ i_byteena_mask_reg_a_out [63:0] $end
$var reg 1 c+ i_byteena_mask_reg_b_out [0:0] $end
$var reg 64 d+ i_byteena_mask_reg_a_x [63:0] $end
$var reg 1 e+ i_byteena_mask_reg_b_x [0:0] $end
$var reg 64 f+ i_byteena_mask_reg_a_out_b [63:0] $end
$var reg 1 g+ i_byteena_mask_reg_b_out_a [0:0] $end
$var reg 2048 h+ ram_initf [2048:1] $end
$var reg 1 i+ i_wren_reg_a $end
$var reg 1 j+ i_wren_reg_b $end
$var reg 1 k+ i_rden_reg_a $end
$var reg 1 l+ i_rden_reg_b $end
$var reg 1 m+ i_read_flag_a $end
$var reg 1 n+ i_read_flag_b $end
$var reg 1 o+ i_write_flag_a $end
$var reg 1 p+ i_write_flag_b $end
$var reg 1 q+ good_to_go_a $end
$var reg 1 r+ good_to_go_b $end
$var reg 32 s+ file_desc [31:0] $end
$var reg 1 t+ init_file_b_port $end
$var reg 1 u+ i_nmram_write_a $end
$var reg 1 v+ i_nmram_write_b $end
$var reg 64 w+ wa_mult_x [63:0] $end
$var reg 64 x+ wa_mult_x_ii [63:0] $end
$var reg 64 y+ wa_mult_x_iii [63:0] $end
$var reg 68 z+ add_reg_a_mult_wa [67:0] $end
$var reg 2 {+ add_reg_b_mult_wb [1:0] $end
$var reg 68 |+ add_reg_a_mult_wa_pl_wa [67:0] $end
$var reg 2 }+ add_reg_b_mult_wb_pl_wb [1:0] $end
$var reg 1 ~+ same_clock_pulse0 $end
$var reg 1 !, same_clock_pulse1 $end
$var reg 1 ", i_original_data_b [0:0] $end
$var reg 64 #, i_original_data_a [63:0] $end
$var reg 1 $, i_address_aclr_a_flag $end
$var reg 1 %, i_address_aclr_a_prev $end
$var reg 1 &, i_address_aclr_b_flag $end
$var reg 1 ', i_address_aclr_b_prev $end
$var reg 1 (, i_outdata_aclr_a_prev $end
$var reg 1 ), i_outdata_aclr_b_prev $end
$var reg 1 *, i_force_reread_a $end
$var reg 1 +, i_force_reread_a1 $end
$var reg 1 ,, i_force_reread_b $end
$var reg 1 -, i_force_reread_b1 $end
$var reg 1 ., i_force_reread_a_signal $end
$var reg 1 /, i_force_reread_b_signal $end
$var reg 169 0, cread_during_write_mode_mixed_ports [168:0] $end
$var reg 57 1, i_ram_block_type [56:0] $end
$var integer 32 2, i_byte_size $end
$var wire 1 3, i_good_to_write_a $end
$var wire 1 4, i_good_to_write_b $end
$var reg 1 5, i_good_to_write_a2 $end
$var reg 1 6, i_good_to_write_b2 $end
$var reg 1 7, i_core_clocken_a_reg $end
$var reg 1 8, i_core_clocken0_b_reg $end
$var reg 1 9, i_core_clocken1_b_reg $end
$var wire 1 :, i_indata_aclr_a $end
$var wire 1 ;, i_address_aclr_a $end
$var wire 1 <, i_wrcontrol_aclr_a $end
$var wire 1 =, i_indata_aclr_b $end
$var wire 1 >, i_address_aclr_b $end
$var wire 1 ?, i_wrcontrol_aclr_b $end
$var wire 1 @, i_outdata_aclr_a $end
$var wire 1 A, i_outdata_aclr_b $end
$var wire 1 B, i_rdcontrol_aclr_b $end
$var wire 1 C, i_byteena_aclr_a $end
$var wire 1 D, i_byteena_aclr_b $end
$var wire 1 E, i_outdata_clken_a $end
$var wire 1 F, i_outdata_clken_b $end
$var wire 1 G, i_outlatch_clken_a $end
$var wire 1 H, i_outlatch_clken_b $end
$var wire 1 I, i_clocken0 $end
$var wire 1 J, i_clocken1_b $end
$var wire 1 K, i_clocken0_b $end
$var wire 1 L, i_core_clocken_a $end
$var wire 1 M, i_core_clocken_b $end
$var wire 1 N, i_core_clocken0_b $end
$var wire 1 O, i_core_clocken1_b $end
$var tri1 1 P, i_byteena_a [0] $end
$var tri1 1 Q, i_byteena_b [0] $end
$var integer 32 R, i_numwords_a $end
$var integer 32 S, i_numwords_b $end
$var integer 32 T, i_aclr_flag_a $end
$var integer 32 U, i_aclr_flag_b $end
$var integer 32 V, i_q_tmp2_a_idx $end
$var integer 32 W, init_i $end
$var integer 32 X, i $end
$var integer 32 Y, i2 $end
$var integer 32 Z, i3 $end
$var integer 32 [, i4 $end
$var integer 32 \, i5 $end
$var integer 32 ], j $end
$var integer 32 ^, j2 $end
$var integer 32 _, j3 $end
$var integer 32 `, k $end
$var integer 32 a, k2 $end
$var integer 32 b, k3 $end
$var integer 32 c, k4 $end
$var integer 32 d, i_div_wa $end
$var integer 32 e, i_div_wb $end
$var integer 32 f, j_plus_i2 $end
$var integer 32 g, j2_plus_i5 $end
$var integer 32 h, j3_plus_i5 $end
$var integer 32 i, j_plus_i2_div_a $end
$var integer 32 j, j2_plus_i5_div_a $end
$var integer 32 k, j3_plus_i5_div_a $end
$var integer 32 l, j3_plus_i5_div_b $end
$var integer 32 m, i_byteena_count $end
$var integer 32 n, port_a_bit_count_low $end
$var integer 32 o, port_a_bit_count_high $end
$var integer 32 p, port_b_bit_count_low $end
$var integer 32 q, port_b_bit_count_high $end
$var time 64 r, i_data_write_time_a $end
$var time 64 s, i_data_write_time_b $end

$scope begin genblk4 $end
$upscope $end

$scope begin genblk3 $end
$upscope $end

$scope begin genblk2 $end
$upscope $end

$scope begin genblk1 $end
$upscope $end

$scope module dev $end

$scope function IS_FAMILY_ARRIA10 $end
$var reg 1 t, IS_FAMILY_ARRIA10 $end
$var reg 160 u, device [160:1] $end
$var reg 1 v, is_arria10 $end
$upscope $end

$scope function IS_FAMILY_ARRIAGX $end
$var reg 1 w, IS_FAMILY_ARRIAGX $end
$var reg 160 x, device [160:1] $end
$var reg 1 y, is_arriagx $end
$upscope $end

$scope function IS_FAMILY_ARRIAIIGX $end
$var reg 1 z, IS_FAMILY_ARRIAIIGX $end
$var reg 160 {, device [160:1] $end
$var reg 1 |, is_arriaiigx $end
$upscope $end

$scope function IS_FAMILY_ARRIAIIGZ $end
$var reg 1 }, IS_FAMILY_ARRIAIIGZ $end
$var reg 160 ~, device [160:1] $end
$var reg 1 !- is_arriaiigz $end
$upscope $end

$scope function IS_FAMILY_ARRIAVGZ $end
$var reg 1 "- IS_FAMILY_ARRIAVGZ $end
$var reg 160 #- device [160:1] $end
$var reg 1 $- is_arriavgz $end
$upscope $end

$scope function IS_FAMILY_ARRIAV $end
$var reg 1 %- IS_FAMILY_ARRIAV $end
$var reg 160 &- device [160:1] $end
$var reg 1 '- is_arriav $end
$upscope $end

$scope function IS_FAMILY_CYCLONE10LP $end
$var reg 1 (- IS_FAMILY_CYCLONE10LP $end
$var reg 160 )- device [160:1] $end
$var reg 1 *- is_cyclone10lp $end
$upscope $end

$scope function IS_FAMILY_CYCLONEII $end
$var reg 1 +- IS_FAMILY_CYCLONEII $end
$var reg 160 ,- device [160:1] $end
$var reg 1 -- is_cycloneii $end
$upscope $end

$scope function IS_FAMILY_CYCLONEIIILS $end
$var reg 1 .- IS_FAMILY_CYCLONEIIILS $end
$var reg 160 /- device [160:1] $end
$var reg 1 0- is_cycloneiiils $end
$upscope $end

$scope function IS_FAMILY_CYCLONEIII $end
$var reg 1 1- IS_FAMILY_CYCLONEIII $end
$var reg 160 2- device [160:1] $end
$var reg 1 3- is_cycloneiii $end
$upscope $end

$scope function IS_FAMILY_CYCLONEIVE $end
$var reg 1 4- IS_FAMILY_CYCLONEIVE $end
$var reg 160 5- device [160:1] $end
$var reg 1 6- is_cycloneive $end
$upscope $end

$scope function IS_FAMILY_CYCLONEIVGX $end
$var reg 1 7- IS_FAMILY_CYCLONEIVGX $end
$var reg 160 8- device [160:1] $end
$var reg 1 9- is_cycloneivgx $end
$upscope $end

$scope function IS_FAMILY_CYCLONEV $end
$var reg 1 :- IS_FAMILY_CYCLONEV $end
$var reg 160 ;- device [160:1] $end
$var reg 1 <- is_cyclonev $end
$upscope $end

$scope function IS_FAMILY_CYCLONE $end
$var reg 1 =- IS_FAMILY_CYCLONE $end
$var reg 160 >- device [160:1] $end
$var reg 1 ?- is_cyclone $end
$upscope $end

$scope function IS_FAMILY_HARDCOPYII $end
$var reg 1 @- IS_FAMILY_HARDCOPYII $end
$var reg 160 A- device [160:1] $end
$var reg 1 B- is_hardcopyii $end
$upscope $end

$scope function IS_FAMILY_HARDCOPYIII $end
$var reg 1 C- IS_FAMILY_HARDCOPYIII $end
$var reg 160 D- device [160:1] $end
$var reg 1 E- is_hardcopyiii $end
$upscope $end

$scope function IS_FAMILY_HARDCOPYIV $end
$var reg 1 F- IS_FAMILY_HARDCOPYIV $end
$var reg 160 G- device [160:1] $end
$var reg 1 H- is_hardcopyiv $end
$upscope $end

$scope function IS_FAMILY_MAX10 $end
$var reg 1 I- IS_FAMILY_MAX10 $end
$var reg 160 J- device [160:1] $end
$var reg 1 K- is_max10 $end
$upscope $end

$scope function IS_FAMILY_MAXII $end
$var reg 1 L- IS_FAMILY_MAXII $end
$var reg 160 M- device [160:1] $end
$var reg 1 N- is_maxii $end
$upscope $end

$scope function IS_FAMILY_MAXV $end
$var reg 1 O- IS_FAMILY_MAXV $end
$var reg 160 P- device [160:1] $end
$var reg 1 Q- is_maxv $end
$upscope $end

$scope function IS_FAMILY_STRATIX10 $end
$var reg 1 R- IS_FAMILY_STRATIX10 $end
$var reg 160 S- device [160:1] $end
$var reg 1 T- is_stratix10 $end
$upscope $end

$scope function IS_FAMILY_STRATIXGX $end
$var reg 1 U- IS_FAMILY_STRATIXGX $end
$var reg 160 V- device [160:1] $end
$var reg 1 W- is_stratixgx $end
$upscope $end

$scope function IS_FAMILY_STRATIXIIGX $end
$var reg 1 X- IS_FAMILY_STRATIXIIGX $end
$var reg 160 Y- device [160:1] $end
$var reg 1 Z- is_stratixiigx $end
$upscope $end

$scope function IS_FAMILY_STRATIXII $end
$var reg 1 [- IS_FAMILY_STRATIXII $end
$var reg 160 \- device [160:1] $end
$var reg 1 ]- is_stratixii $end
$upscope $end

$scope function IS_FAMILY_STRATIXIII $end
$var reg 1 ^- IS_FAMILY_STRATIXIII $end
$var reg 160 _- device [160:1] $end
$var reg 1 `- is_stratixiii $end
$upscope $end

$scope function IS_FAMILY_STRATIXIV $end
$var reg 1 a- IS_FAMILY_STRATIXIV $end
$var reg 160 b- device [160:1] $end
$var reg 1 c- is_stratixiv $end
$upscope $end

$scope function IS_FAMILY_STRATIXV $end
$var reg 1 d- IS_FAMILY_STRATIXV $end
$var reg 160 e- device [160:1] $end
$var reg 1 f- is_stratixv $end
$upscope $end

$scope function IS_FAMILY_STRATIX $end
$var reg 1 g- IS_FAMILY_STRATIX $end
$var reg 160 h- device [160:1] $end
$var reg 1 i- is_stratix $end
$upscope $end

$scope function FEATURE_FAMILY_STRATIXGX $end
$var reg 1 j- FEATURE_FAMILY_STRATIXGX $end
$var reg 160 k- device [160:1] $end
$var reg 1 l- var_family_stratixgx $end
$upscope $end

$scope function FEATURE_FAMILY_CYCLONE $end
$var reg 1 m- FEATURE_FAMILY_CYCLONE $end
$var reg 160 n- device [160:1] $end
$var reg 1 o- var_family_cyclone $end
$upscope $end

$scope function FEATURE_FAMILY_STRATIXIIGX $end
$var reg 1 p- FEATURE_FAMILY_STRATIXIIGX $end
$var reg 160 q- device [160:1] $end
$var reg 1 r- var_family_stratixiigx $end
$upscope $end

$scope function FEATURE_FAMILY_STRATIXIII $end
$var reg 1 s- FEATURE_FAMILY_STRATIXIII $end
$var reg 160 t- device [160:1] $end
$var reg 1 u- var_family_stratixiii $end
$upscope $end

$scope function FEATURE_FAMILY_ARRIAVGZ $end
$var reg 1 v- FEATURE_FAMILY_ARRIAVGZ $end
$var reg 160 w- device [160:1] $end
$var reg 1 x- var_family_arriavgz $end
$upscope $end

$scope function FEATURE_FAMILY_STRATIXV $end
$var reg 1 y- FEATURE_FAMILY_STRATIXV $end
$var reg 160 z- device [160:1] $end
$var reg 1 {- var_family_stratixv $end
$upscope $end

$scope function FEATURE_FAMILY_ARRIA10 $end
$var reg 1 |- FEATURE_FAMILY_ARRIA10 $end
$var reg 160 }- device [160:1] $end
$var reg 1 ~- var_family_arria10 $end
$upscope $end

$scope function FEATURE_FAMILY_CYCLONE10LP $end
$var reg 1 !. FEATURE_FAMILY_CYCLONE10LP $end
$var reg 160 ". device [160:1] $end
$var reg 1 #. var_family_cyclone10lp $end
$upscope $end

$scope function FEATURE_FAMILY_STRATIXII $end
$var reg 1 $. FEATURE_FAMILY_STRATIXII $end
$var reg 160 %. device [160:1] $end
$var reg 1 &. var_family_stratixii $end
$upscope $end

$scope function FEATURE_FAMILY_CYCLONEIVGX $end
$var reg 1 '. FEATURE_FAMILY_CYCLONEIVGX $end
$var reg 160 (. device [160:1] $end
$var reg 1 ). var_family_cycloneivgx $end
$upscope $end

$scope function FEATURE_FAMILY_CYCLONEIVE $end
$var reg 1 *. FEATURE_FAMILY_CYCLONEIVE $end
$var reg 160 +. device [160:1] $end
$var reg 1 ,. var_family_cycloneive $end
$upscope $end

$scope function FEATURE_FAMILY_CYCLONEIII $end
$var reg 1 -. FEATURE_FAMILY_CYCLONEIII $end
$var reg 160 .. device [160:1] $end
$var reg 1 /. var_family_cycloneiii $end
$upscope $end

$scope function FEATURE_FAMILY_STRATIX_HC $end
$var reg 1 0. FEATURE_FAMILY_STRATIX_HC $end
$var reg 160 1. device [160:1] $end
$var reg 1 2. var_family_stratix_hc $end
$upscope $end

$scope function FEATURE_FAMILY_STRATIX $end
$var reg 1 3. FEATURE_FAMILY_STRATIX $end
$var reg 160 4. device [160:1] $end
$var reg 1 5. var_family_stratix $end
$upscope $end

$scope function FEATURE_FAMILY_MAXII $end
$var reg 1 6. FEATURE_FAMILY_MAXII $end
$var reg 160 7. device [160:1] $end
$var reg 1 8. var_family_maxii $end
$upscope $end

$scope function FEATURE_FAMILY_MAXV $end
$var reg 1 9. FEATURE_FAMILY_MAXV $end
$var reg 160 :. device [160:1] $end
$var reg 1 ;. var_family_maxv $end
$upscope $end

$scope function FEATURE_FAMILY_CYCLONEII $end
$var reg 1 <. FEATURE_FAMILY_CYCLONEII $end
$var reg 160 =. device [160:1] $end
$var reg 1 >. var_family_cycloneii $end
$upscope $end

$scope function FEATURE_FAMILY_STRATIXIV $end
$var reg 1 ?. FEATURE_FAMILY_STRATIXIV $end
$var reg 160 @. device [160:1] $end
$var reg 1 A. var_family_stratixiv $end
$upscope $end

$scope function FEATURE_FAMILY_ARRIAIIGZ $end
$var reg 1 B. FEATURE_FAMILY_ARRIAIIGZ $end
$var reg 160 C. device [160:1] $end
$var reg 1 D. var_family_arriaiigz $end
$upscope $end

$scope function FEATURE_FAMILY_ARRIAIIGX $end
$var reg 1 E. FEATURE_FAMILY_ARRIAIIGX $end
$var reg 160 F. device [160:1] $end
$var reg 1 G. var_family_arriaiigx $end
$upscope $end

$scope function FEATURE_FAMILY_HARDCOPYIII $end
$var reg 1 H. FEATURE_FAMILY_HARDCOPYIII $end
$var reg 160 I. device [160:1] $end
$var reg 1 J. var_family_hardcopyiii $end
$upscope $end

$scope function FEATURE_FAMILY_HARDCOPYIV $end
$var reg 1 K. FEATURE_FAMILY_HARDCOPYIV $end
$var reg 160 L. device [160:1] $end
$var reg 1 M. var_family_hardcopyiv $end
$upscope $end

$scope function FEATURE_FAMILY_CYCLONEV $end
$var reg 1 N. FEATURE_FAMILY_CYCLONEV $end
$var reg 160 O. device [160:1] $end
$var reg 1 P. var_family_cyclonev $end
$upscope $end

$scope function FEATURE_FAMILY_ARRIAV $end
$var reg 1 Q. FEATURE_FAMILY_ARRIAV $end
$var reg 160 R. device [160:1] $end
$var reg 1 S. var_family_arriav $end
$upscope $end

$scope function FEATURE_FAMILY_MAX10 $end
$var reg 1 T. FEATURE_FAMILY_MAX10 $end
$var reg 160 U. device [160:1] $end
$var reg 1 V. var_family_max10 $end
$upscope $end

$scope function FEATURE_FAMILY_STRATIX10 $end
$var reg 1 W. FEATURE_FAMILY_STRATIX10 $end
$var reg 160 X. device [160:1] $end
$var reg 1 Y. var_family_stratix10 $end
$upscope $end

$scope function FEATURE_FAMILY_BASE_STRATIXII $end
$var reg 1 Z. FEATURE_FAMILY_BASE_STRATIXII $end
$var reg 160 [. device [160:1] $end
$var reg 1 \. var_family_base_stratixii $end
$upscope $end

$scope function FEATURE_FAMILY_BASE_STRATIX $end
$var reg 1 ]. FEATURE_FAMILY_BASE_STRATIX $end
$var reg 160 ^. device [160:1] $end
$var reg 1 _. var_family_base_stratix $end
$upscope $end

$scope function FEATURE_FAMILY_BASE_CYCLONEII $end
$var reg 1 `. FEATURE_FAMILY_BASE_CYCLONEII $end
$var reg 160 a. device [160:1] $end
$var reg 1 b. var_family_base_cycloneii $end
$upscope $end

$scope function FEATURE_FAMILY_BASE_CYCLONE $end
$var reg 1 c. FEATURE_FAMILY_BASE_CYCLONE $end
$var reg 160 d. device [160:1] $end
$var reg 1 e. var_family_base_cyclone $end
$upscope $end

$scope function FEATURE_FAMILY_HAS_ALTERA_MULT_ADD_FLOW $end
$var reg 1 f. FEATURE_FAMILY_HAS_ALTERA_MULT_ADD_FLOW $end
$var reg 160 g. device [160:1] $end
$var reg 1 h. var_family_has_altera_mult_add_flow $end
$upscope $end

$scope function FEATURE_FAMILY_IS_ALTMULT_ADD_EOL $end
$var reg 1 i. FEATURE_FAMILY_IS_ALTMULT_ADD_EOL $end
$var reg 160 j. device [160:1] $end
$var reg 1 k. var_family_is_altmult_add_eol $end
$upscope $end

$scope function FEATURE_FAMILY_HAS_STRATIXII_STYLE_RAM $end
$var reg 1 l. FEATURE_FAMILY_HAS_STRATIXII_STYLE_RAM $end
$var reg 160 m. device [160:1] $end
$var reg 1 n. var_family_has_stratixii_style_ram $end
$upscope $end

$scope function FEATURE_FAMILY_HAS_STRATIXIII_STYLE_RAM $end
$var reg 1 o. FEATURE_FAMILY_HAS_STRATIXIII_STYLE_RAM $end
$var reg 160 p. device [160:1] $end
$var reg 1 q. var_family_has_stratixiii_style_ram $end
$upscope $end

$scope function FEATURE_FAMILY_HAS_STRATIX_STYLE_PLL $end
$var reg 1 r. FEATURE_FAMILY_HAS_STRATIX_STYLE_PLL $end
$var reg 160 s. device [160:1] $end
$var reg 1 t. var_family_has_stratix_style_pll $end
$upscope $end

$scope function FEATURE_FAMILY_HAS_STRATIXII_STYLE_PLL $end
$var reg 1 u. FEATURE_FAMILY_HAS_STRATIXII_STYLE_PLL $end
$var reg 160 v. device [160:1] $end
$var reg 1 w. var_family_has_stratixii_style_pll $end
$upscope $end

$scope function FEATURE_FAMILY_HAS_INVERTED_OUTPUT_DDIO $end
$var reg 1 x. FEATURE_FAMILY_HAS_INVERTED_OUTPUT_DDIO $end
$var reg 160 y. device [160:1] $end
$var reg 1 z. var_family_has_inverted_output_ddio $end
$upscope $end

$scope function IS_VALID_FAMILY $end
$var reg 1 {. IS_VALID_FAMILY $end
$var reg 160 |. device [160:1] $end
$var reg 1 }. is_valid $end
$upscope $end
$upscope $end

$scope module mem $end

$scope function tolower $end
$var reg 8 ~. tolower [8:1] $end
$var reg 8 !/ given_character [8:1] $end
$var reg 8 "/ conv_char [8:1] $end
$upscope $end

$scope function ecc_parity $end
$var reg 8 #/ ecc_parity [7:0] $end
$var reg 8 $/ i_eccencparity [7:0] $end
$var integer 32 %/ pointer $end
$var integer 32 &/ pointer_max $end
$var integer 32 '/ pointer_min $end
$var integer 32 (/ flag_err $end
$var integer 32 )/ flag $end
$var integer 32 */ flag_double $end
$var integer 32 +/ flag_triple $end
$var integer 32 ,/ flag_single $end
$var integer 32 -/ flag_no_err $end
$var integer 32 ./ flag_uncorr $end
$var integer 32 // n $end
$var integer 32 0/ err $end
$var integer 32 1/ found $end
$var integer 32 2/ found_2 $end
$upscope $end

$scope task convert_mif2ver $end
$var reg 2048 3/ in_file [2048:1] $end
$var integer 32 4/ width $end
$var reg 2048 5/ out_file [2048:1] $end
$var reg 2048 6/ buffer [2048:1] $end
$var reg 1025 7/ memory_data1 [1024:0] $end
$var reg 1025 8/ memory_data2 [1024:0] $end
$var reg 8 9/ c [8:1] $end
$var reg 4 :/ hex [3:0] $end
$var reg 4 ;/ tmp_char [3:0] $end
$var reg 24 </ address_radix [24:1] $end
$var reg 24 =/ data_radix [24:1] $end
$var reg 1 >/ get_width $end
$var reg 1 ?/ get_depth $end
$var reg 1 @/ get_data_radix $end
$var reg 1 A/ get_address_radix $end
$var reg 1 B/ width_found $end
$var reg 1 C/ depth_found $end
$var reg 1 D/ data_radix_found $end
$var reg 1 E/ address_radix_found $end
$var reg 1 F/ get_address_data_pairs $end
$var reg 1 G/ get_address $end
$var reg 1 H/ get_data $end
$var reg 1 I/ display_address $end
$var reg 1 J/ invalid_address $end
$var reg 1 K/ get_start_address $end
$var reg 1 L/ get_end_address $end
$var reg 1 M/ done $end
$var reg 1 N/ error_status $end
$var reg 1 O/ first_rec $end
$var reg 1 P/ last_rec $end
$var integer 32 Q/ memory_width $end
$var integer 32 R/ memory_depth $end
$var integer 32 S/ value $end
$var integer 32 T/ ifp $end
$var integer 32 U/ ofp $end
$var integer 32 V/ r $end
$var integer 32 W/ r2 $end
$var integer 32 X/ i $end
$var integer 32 Y/ j $end
$var integer 32 Z/ k $end
$var integer 32 [/ m $end
$var integer 32 \/ n $end
$var integer 32 ]/ negative $end
$var integer 32 ^/ off_addr $end
$var integer 32 _/ nn $end
$var integer 32 `/ address $end
$var integer 32 a/ tt $end
$var integer 32 b/ cc $end
$var integer 32 c/ aah $end
$var integer 32 d/ aal $end
$var integer 32 e/ dd $end
$var integer 32 f/ sum $end
$var integer 32 g/ start_address $end
$var integer 32 h/ end_address $end
$var integer 32 i/ line_no $end
$var integer 32 j/ character_count $end
$var integer 32 k/ comment_with_percent_found $end
$var integer 32 l/ comment_with_double_minus_found $end

$scope begin READER $end
$upscope $end
$upscope $end

$scope task convert_hex2ver $end
$var reg 2048 m/ in_file [2048:1] $end
$var integer 32 n/ width $end
$var reg 2048 o/ out_file [2048:1] $end
$var reg 8 p/ c [8:1] $end
$var reg 4 q/ hex [3:0] $end
$var reg 4 r/ tmp_char [3:0] $end
$var reg 1 s/ done $end
$var reg 1 t/ error_status $end
$var reg 1 u/ first_rec $end
$var reg 1 v/ last_rec $end
$var reg 1 w/ first_normal_record $end
$var reg 1 x/ is_word_address_format $end
$var integer 32 y/ ifp $end
$var integer 32 z/ ofp $end
$var integer 32 {/ r $end
$var integer 32 |/ r2 $end
$var integer 32 }/ i $end
$var integer 32 ~/ j $end
$var integer 32 !0 k $end
$var integer 32 "0 m $end
$var integer 32 #0 n $end
$var integer 32 $0 off_addr $end
$var integer 32 %0 nn $end
$var integer 32 &0 aaaa $end
$var integer 32 '0 aaaa_pre $end
$var integer 32 (0 tt $end
$var integer 32 )0 cc $end
$var integer 32 *0 aah $end
$var integer 32 +0 aal $end
$var integer 32 ,0 dd $end
$var integer 32 -0 sum $end
$var integer 32 .0 line_no $end
$var integer 32 /0 divide_factor $end

$scope begin READER $end
$upscope $end
$upscope $end

$scope task convert_to_ver_file $end
$var reg 2048 00 in_file [2048:1] $end
$var integer 32 10 width $end
$var reg 2048 20 out_file [2048:1] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module fifoB $end
$var parameter 32 30 DEPTH $end
$var parameter 32 40 DATA_WIDTH $end
$var wire 1 i clk $end
$var wire 1 m rst_n $end
$var wire 1 50 rden $end
$var wire 1 60 wren $end
$var wire 1 70 i_data [7] $end
$var wire 1 80 i_data [6] $end
$var wire 1 90 i_data [5] $end
$var wire 1 :0 i_data [4] $end
$var wire 1 ;0 i_data [3] $end
$var wire 1 <0 i_data [2] $end
$var wire 1 =0 i_data [1] $end
$var wire 1 >0 i_data [0] $end
$var reg 8 ?0 o_data [7:0] $end
$var wire 1 @0 full $end
$var wire 1 A0 empty $end
$var reg 4 B0 wr_ptr [3:0] $end
$var reg 4 C0 rd_ptr [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
b1111 "
b0 #
b0xxxxx x
b1111111 y
b1111111 z
b1111111 {
b1111111 |
b1111111 }
b1111111 ~
bx !!
x"!
bx #!
x$!
x%!
bx R'
xS'
xT'
bx 7(
bx 8(
bx 9(
b0 I+
bx J+
bx K+
bx L+
bx M+
b0 N+
bx O+
bx P+
xQ+
b0 R+
b0 S+
b0 T+
b0 U+
b0 V+
b0 W+
bx X+
b0 Y+
b0 Z+
b0 [+
b0 \+
bx ]+
bx ^+
b0 _+
bx `+
bx a+
b0 b+
b0 c+
b0 d+
b0 e+
bx f+
bx g+
b1101001011011100111000001110101011101000101111101101101011001010110110100101110011101100110010101110010 h+
0i+
0j+
0k+
0l+
0m+
0n+
0o+
0p+
0q+
0r+
bx s+
0t+
0u+
0v+
b0 w+
bx x+
bx y+
bx z+
bx {+
bx |+
bx }+
0~+
0!,
b0 ",
b0 #,
x$,
0%,
0&,
0',
0(,
0),
0*,
0+,
0,,
0-,
0.,
0/,
b10001000100111101001110010101000101111101000011010000010101001001000101 0,
b1000001010101010101010001001111 1,
15,
16,
07,
08,
19,
xt,
bx u,
xv,
xw,
bx x,
xy,
xz,
bx {,
x|,
x},
bx ~,
x!-
x"-
bx #-
x$-
x%-
bx &-
x'-
x(-
bx )-
x*-
x+-
bx ,-
x--
x.-
bx /-
x0-
x1-
bx 2-
x3-
x4-
bx 5-
x6-
x7-
bx 8-
x9-
x:-
bx ;-
x<-
x=-
bx >-
x?-
x@-
bx A-
xB-
xC-
bx D-
xE-
xF-
bx G-
xH-
xI-
bx J-
xK-
xL-
bx M-
xN-
xO-
bx P-
xQ-
xR-
bx S-
xT-
xU-
bx V-
xW-
xX-
bx Y-
xZ-
x[-
bx \-
x]-
x^-
bx _-
x`-
xa-
bx b-
xc-
xd-
bx e-
xf-
xg-
bx h-
xi-
xj-
bx k-
xl-
xm-
bx n-
xo-
xp-
bx q-
xr-
xs-
bx t-
xu-
xv-
bx w-
xx-
xy-
bx z-
x{-
x|-
bx }-
x~-
x!.
bx ".
x#.
x$.
bx %.
x&.
x'.
bx (.
x).
x*.
bx +.
x,.
x-.
bx ..
x/.
x0.
bx 1.
x2.
x3.
bx 4.
x5.
x6.
bx 7.
x8.
x9.
bx :.
x;.
x<.
bx =.
x>.
x?.
bx @.
xA.
xB.
bx C.
xD.
xE.
bx F.
xG.
xH.
bx I.
xJ.
xK.
bx L.
xM.
xN.
bx O.
xP.
xQ.
bx R.
xS.
xT.
bx U.
xV.
xW.
bx X.
xY.
xZ.
bx [.
x\.
x].
bx ^.
x_.
x`.
bx a.
xb.
xc.
bx d.
xe.
xf.
bx g.
xh.
xi.
bx j.
xk.
xl.
bx m.
xn.
xo.
bx p.
xq.
xr.
bx s.
xt.
xu.
bx v.
xw.
xx.
bx y.
xz.
x{.
bx |.
x}.
b1100100 ~.
b1000100 !/
b1100100 "/
bx #/
bx $/
b1101001011011100111000001110101011101000101111101101101011001010110110100101110011011010110100101100110 3/
b1101001011011100111000001110101011101000101111101101101011001010110110100101110011101100110010101110010 5/
b0 6/
b0 7/
b0 8/
b1100100 9/
b0 :/
b0 ;/
b11010000110010101111000 </
b11010000110010101111000 =/
0>/
0?/
0@/
0A/
1B/
1C/
1D/
1E/
1F/
1G/
0H/
0I/
1J/
0K/
0L/
1M/
0N/
1O/
1P/
bx m/
bx o/
bx p/
bx q/
bx r/
xs/
xt/
xu/
xv/
xw/
xx/
b1101001011011100111000001110101011101000101111101101101011001010110110100101110011011010110100101100110 00
b1101001011011100111000001110101011101000101111101101101011001010110110100101110011101100110010101110010 20
x&!
x'!
bx (!
bx )!
x*!
x+!
bx ?0
bx B0
bx C0
bx )'
bx ,'
bx -'
bx u&
bx x&
bx y&
bx c&
bx f&
bx g&
bx Q&
bx T&
bx U&
bx ?&
bx B&
bx C&
bx -&
bx 0&
bx 1&
bx y%
bx |%
bx }%
bx g%
bx j%
bx k%
bx R%
bx S%
bx T%
bx U%
bx V%
bx W%
xX%
xY%
bx |$
bx }$
bx ~$
bx !%
bx "%
bx #%
x$%
x%%
bx H$
bx I$
bx J$
bx K$
bx L$
bx M$
xN$
xO$
bx r#
bx s#
bx t#
bx u#
bx v#
bx w#
xx#
xy#
bx >#
bx ?#
bx @#
bx A#
bx B#
bx C#
xD#
xE#
bx h"
bx i"
bx j"
bx k"
bx l"
bx m"
xn"
xo"
bx 4"
bx 5"
bx 6"
bx 7"
bx 8"
bx 9"
x:"
x;"
bx ^!
bx _!
bx `!
bx a!
bx b!
bx c!
xd!
xe!
bx ,!
bx -!
bx .!
bx /!
b0 1!
b1000000 X
b1111001 Y
b100100 Z
b110000 [
b11001 \
b10010 ]
b10 ^
b1111000 _
b0 `
b11000 a
b1000 b
b11 c
b1000110 d
b100001 e
b110 f
b1110 g
b1111111 h
b0 .'
b1 /'
b10 0'
b1000000 ~(
b100 !)
b1001 ")
b1 ))
b1 *)
b1 +)
b0 ,)
b1 9)
b11 C)
b0 F)
b0 K)
b0 Q)
b1000000 I*
b100 J*
b1001 K*
b1 R*
b1 S*
b1 T*
b0 U*
b1 b*
b11 l*
b0 o*
b0 t*
b0 {*
b0 |*
b0 }*
b0 ~*
b0 !+
b0 "+
b1000 #+
b0 $+
b0 %+
b0 &+
b1 '+
b1 (+
b0 )+
b0 *+
b0 ++
b0 ,+
b0 -+
b1 .+
b0 /+
b0 0+
b0 1+
b0 2+
b0 3+
b1 4+
b0 5+
b0 6+
b0 7+
b0 8+
b0 9+
b0 :+
b0 ;+
b1 <+
b1 =+
b1 >+
b0 ?+
b0 @+
b0 A+
b1 B+
b0 C+
b0 D+
b1 E+
b1 F+
b0 G+
b1 H+
b1000 30
b1000 40
b0 z&
b1000 {&
b1000 |&
b1 h&
b1000 i&
b1000 j&
b10 V&
b1000 W&
b1000 X&
b11 D&
b1000 E&
b1000 F&
b100 2&
b1000 3&
b1000 4&
b101 ~%
b1000 !&
b1000 "&
b110 l%
b1000 m%
b1000 n%
b111 Z%
b1000 [%
b1000 \%
b0 &%
b1000 '%
b1 P$
b1000 Q$
b10 z#
b1000 {#
b11 F#
b1000 G#
b100 p"
b1000 q"
b101 <"
b1000 ="
b110 f!
b1000 g!
b111 2!
b1000 3!
b10101010100111001010010010001010100011101001001010100110101010001000101010100100100010101000100 #)
b1001110010011110100111001000101 $)
b1001110010011110100111001000101 %)
b1001110010011110100111001000101 &)
b1001110010011110100111001000101 ')
b1001110010011110100111001000101 ()
b10000110100110001001111010000110100101100110001 -)
b10000110100110001001111010000110100101100110001 .)
b10101010100111001010010010001010100011101001001010100110101010001000101010100100100010101000100 /)
b1001110010011110100111001000101 0)
b1001110010011110100111001000101 1)
b10000110100110001001111010000110100101100110001 2)
b10000110100110001001111010000110100101100110001 3)
b10000110100110001001111010000110100101100110001 4)
b1001110010011110100111001000101 5)
b1001110010011110100111001000101 6)
b1001110010011110100111001000101 7)
b1001110010011110100111001000101 8)
b10000100101100101010000010000010101001101010011 :)
b10000100101100101010000010000010101001101010011 ;)
b10011100100111101010010010011010100000101001100 <)
b10011100100111101010010010011010100000101001100 =)
b10101010101001101000101010111110100100101001110010100000101010101010100010111110100001101001100010010110100010101001110 >)
b10101010101001101000101010111110100100101001110010100000101010101010100010111110100001101001100010010110100010101001110 ?)
b100111001000101010101110101111101000100010000010101010001000001010111110100111001001111010111110100111001000010010001010101111101010010010001010100000101000100 @)
b100111001000101010101110101111101000100010000010101010001000001010111110100111001001111010111110100111001000010010001010101111101010010010001010100000101000100 A)
b100011001000001010011000101001101000101 B)
b100011001000001010011000101001101000101 D)
b10100100100111101001101 E)
b10001000100111101001110010101000101111101000011010000010101001001000101 G)
b1000001010101010101010001001111 H)
b1101001011011100111000001110101011101000101111101101101011001010110110100101110011011010110100101100110 I)
b10101010100111001010101010100110100010101000100 J)
b10000110111100101100011011011000110111101101110011001010010000001010110 L)
b10001010100111001000001010000100100110001000101010111110101001001010101010011100101010001001001010011010100010101011111010011010100111101000100001111010100111001001111 M)
b1100001011011000111010001110011011110010110111001100011011100100110000101101101 N)
b10011110100011001000110 O)
b100011001000001010011000101001101000101 P)
b10101010100111001010010010001010100011101001001010100110101010001000101010100100100010101000100 L*
b1001110010011110100111001000101 M*
b1001110010011110100111001000101 N*
b1001110010011110100111001000101 O*
b1001110010011110100111001000101 P*
b1001110010011110100111001000101 Q*
b10000110100110001001111010000110100101100110001 V*
b10000110100110001001111010000110100101100110001 W*
b10101010100111001010010010001010100011101001001010100110101010001000101010100100100010101000100 X*
b1001110010011110100111001000101 Y*
b1001110010011110100111001000101 Z*
b10000110100110001001111010000110100101100110001 [*
b10000110100110001001111010000110100101100110001 \*
b10000110100110001001111010000110100101100110001 ]*
b1001110010011110100111001000101 ^*
b1001110010011110100111001000101 _*
b1001110010011110100111001000101 `*
b1001110010011110100111001000101 a*
b10000100101100101010000010000010101001101010011 c*
b10000100101100101010000010000010101001101010011 d*
b10011100100111101010010010011010100000101001100 e*
b10011100100111101010010010011010100000101001100 f*
b10101010101001101000101010111110100100101001110010100000101010101010100010111110100001101001100010010110100010101001110 g*
b10101010101001101000101010111110100100101001110010100000101010101010100010111110100001101001100010010110100010101001110 h*
b100111001000101010101110101111101000100010000010101010001000001010111110100111001001111010111110100111001000010010001010101111101010010010001010100000101000100 i*
b100111001000101010101110101111101000100010000010101010001000001010111110100111001001111010111110100111001000010010001010101111101010010010001010100000101000100 j*
b100011001000001010011000101001101000101 k*
b100011001000001010011000101001101000101 m*
b10100100100111101001101 n*
b10001000100111101001110010101000101111101000011010000010101001001000101 p*
b1000001010101010101010001001111 q*
b1101001011011100111000001110101011101000101111101101101011001010110110100101110011011010110100101100110 r*
b10101010100111001010101010100110100010101000100 s*
b10000110111100101100011011011000110111101101110011001010010000001010110 u*
b10001010100111001000001010000100100110001000101010111110101001001010101010011100101010001001001010011010100010101011111010011010100111101000100001111010100111001001111 v*
b1100001011011000111010001110011011110010110111001100011011100100110000101101101 w*
b10011110100011001000110 x*
b100011001000001010011000101001101000101 y*
b10011110100011001000110 z*
b1000 2,
b1001 R,
b10 S,
b0 T,
b0 U,
bx V,
bx W,
b10 X,
bx Y,
bx Z,
bx [,
bx \,
bx ],
bx ^,
bx _,
bx `,
bx a,
bx b,
bx c,
bx d,
bx e,
bx f,
bx g,
bx h,
bx i,
bx j,
bx k,
bx l,
b0 m,
bx n,
bx o,
bx p,
bx q,
bx %/
bx &/
bx '/
bx (/
bx )/
bx */
bx +/
bx ,/
bx -/
bx ./
bx //
bx 0/
bx 1/
bx 2/
b1000000 4/
b1000000 Q/
b1001 R/
b1101 S/
b10000000000000000000000000000011 T/
b10000000000000000000000000000100 U/
b11111111111111111111111111111111 V/
bx W/
b11111111111111111111111111111111 X/
bx Y/
bx Z/
bx [/
bx \/
b0 ]/
b0 ^/
b0 _/
b111011101101 `/
b0 a/
b0 b/
b0 c/
b0 d/
b0 e/
b0 f/
b0 g/
b0 h/
b10011 i/
b0 j/
b0 k/
b0 l/
bx n/
bx y/
bx z/
bx {/
bx |/
bx }/
bx ~/
bx !0
bx "0
bx #0
bx $0
bx %0
bx &0
bx '0
bx (0
bx )0
bx *0
bx +0
bx ,0
bx -0
bx .0
bx /0
b1000000 10
bx 0!
b0 r,
b0 s,
x-
x,
x+
x*
x)
0(
0'
0&
0%
0$
14
13
12
11
10
1/
1.
1;
1:
19
18
17
16
15
1B
1A
1@
1?
1>
1=
1<
1I
1H
1G
1F
1E
1D
1C
1P
1O
1N
1M
1L
1K
1J
1W
1V
1U
1T
1S
1R
1Q
06(
05(
04(
03(
02(
01(
00(
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$(
0#(
0"(
0!(
0~'
0}'
0|'
0{'
0z'
0y'
0x'
0w'
0v'
0u'
0t'
0s'
0r'
0q'
0p'
0o'
0n'
0m'
0l'
0k'
0j'
0i'
0h'
0g'
0f'
0e'
0d'
0c'
0b'
0a'
0`'
0_'
0^'
0]'
0\'
0['
0Z'
0Y'
0X'
0W'
0V'
0U'
0}(
0|(
0{(
0z(
0y(
0x(
0w(
0v(
0u(
0t(
0s(
0r(
0q(
0p(
0o(
0n(
0m(
0l(
0k(
0j(
0i(
0h(
0g(
0f(
0e(
0d(
0c(
0b(
0a(
0`(
0_(
0^(
0](
0\(
0[(
0Z(
0Y(
0X(
0W(
0V(
0U(
0T(
0S(
0R(
0Q(
0P(
0O(
0N(
0M(
0L(
0K(
0J(
0I(
0H(
0G(
0F(
0E(
0D(
0C(
0B(
0A(
0@(
0?(
0>(
13,
14,
0:,
0;,
0<,
0=,
0>,
0?,
0@,
0A,
0B,
0C,
0D,
1E,
1F,
1G,
1H,
1I,
1J,
1K,
1L,
1M,
1N,
1O,
1P,
1Q,
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
1m
1l
1k
1j
0i
x>0
x=0
x<0
x;0
x:0
x90
x80
x70
x60
x50
xQ'
xP'
xO'
xN'
xM'
xL'
xK'
xJ'
xI'
xH'
xG'
xF'
xE'
xD'
xC'
xB'
xA'
x@'
x?'
x>'
x='
x<'
x;'
x:'
x9'
x8'
x7'
x6'
x5'
x4'
x3'
x2'
x1'
x('
x''
x&'
x%'
x$'
x#'
x"'
x!'
x~&
x}&
xt&
xs&
xr&
xq&
xp&
xo&
xn&
xm&
xl&
xk&
xb&
xa&
x`&
x_&
x^&
x]&
x\&
x[&
xZ&
xY&
xP&
xO&
xN&
xM&
xL&
xK&
xJ&
xI&
xH&
xG&
x>&
x=&
x<&
x;&
x:&
x9&
x8&
x7&
x6&
x5&
x,&
x+&
x*&
x)&
x(&
x'&
x&&
x%&
x$&
x#&
xx%
xw%
xv%
xu%
xt%
xs%
xr%
xq%
xp%
xo%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x_%
x^%
x]%
x9%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
x(%
xc$
xb$
xa$
x`$
x_$
x^$
x]$
x\$
x[$
xZ$
xY$
xX$
xW$
xV$
xU$
xT$
xS$
xR$
x/$
x.$
x-$
x,$
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
xY#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xJ#
xI#
xH#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
xu"
xt"
xs"
xr"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
xy!
xx!
xw!
xv!
xu!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xj!
xi!
xh!
xE!
xD!
xC!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
x=(
x<(
x;(
x:(
0D*
0C*
1B*
1A*
0@*
0?*
1>*
1=*
1<*
1;*
1:*
19*
18*
17*
16*
15*
14*
13*
12*
11*
10*
1/*
1.*
1-*
1,*
1+*
1**
1)*
1(*
1'*
1&*
1%*
1$*
1#*
1"*
1!*
1~)
1})
1|)
1{)
1z)
1y)
1x)
1w)
1v)
1u)
1t)
1s)
1r)
1q)
1p)
1o)
1n)
1m)
1l)
1k)
1j)
1i)
1h)
1g)
1f)
1e)
1d)
1c)
1b)
1a)
1`)
1_)
1^)
1])
1\)
1[)
1Z)
1Y)
1X)
1W)
1V)
1U)
1T)
0S)
0R)
0E*
0H*
0G*
0F*
x@0
xA0
x*'
x+'
xv&
xw&
xd&
xe&
xR&
xS&
x@&
xA&
x.&
x/&
xz%
x{%
xh%
xi%
xQ%
xP%
xO%
xN%
xM%
xL%
xK%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
x:%
x{$
xz$
xy$
xx$
xw$
xv$
xu$
xt$
xs$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
x7$
x6$
x5$
x4$
x3$
x2$
x1$
x0$
xq#
xp#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
x6#
x5#
x4#
x3#
x2#
x1#
x0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
xg"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
x]!
x\!
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xT!
xS!
xR!
xQ!
xP!
xO!
xN!
xM!
xL!
xK!
xJ!
xI!
xH!
xG!
xF!
$end
#5000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
17,
18,
1m+
1q+
1k+
b1111111111111111111111111111111111111111111111111111111111111111 I+
bx [+
b1111111111111111111111111111111111111111111111111111111111111111 Y+
0"!
0&!
0'!
0Q'
060
050
0^%
0p%
0$&
06&
0H&
0Z&
0l&
0~&
0]%
0o%
0#&
05&
0G&
0Y&
0k&
0}&
05!
0i!
0?"
0s"
0I#
0}#
0S$
0)%
04!
0h!
0>"
0r"
0H#
0|#
0R$
0(%
bx T+
bx S+
x}(
x|(
x{(
xz(
xy(
xx(
xw(
xv(
xu(
xt(
xs(
xr(
xq(
xp(
xo(
xn(
xm(
xl(
xk(
xj(
xi(
xh(
xg(
xf(
xe(
xd(
xc(
xb(
xa(
x`(
x_(
x^(
x](
x\(
x[(
xZ(
xY(
xX(
xW(
xV(
xU(
xT(
xS(
xR(
xQ(
xP(
xO(
xN(
xM(
xL(
xK(
xJ(
xI(
xH(
xG(
xF(
xE(
xD(
xC(
xB(
xA(
x@(
x?(
x>(
x6(
x5(
x4(
x3(
x2(
x1(
x0(
x/(
x.(
x-(
x,(
x+(
x*(
x)(
x((
x'(
x&(
x%(
x$(
x#(
x"(
x!(
x~'
x}'
x|'
x{'
xz'
xy'
xx'
xw'
xv'
xu'
xt'
xs'
xr'
xq'
xp'
xo'
xn'
xm'
xl'
xk'
xj'
xi'
xh'
xg'
xf'
xe'
xd'
xc'
xb'
xa'
x`'
x_'
x^'
x]'
x\'
x['
xZ'
xY'
xX'
xW'
xV'
xU'
#10000
b1110 "
0!
0m
0i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0~+
b0 9(
0S'
b0 R'
0T'
b0 8(
b0 T%
b0 U%
0X%
b0 V%
b0 W%
0Y%
b0 R%
b0 S%
b0 ~$
b0 !%
0$%
b0 "%
b0 #%
0%%
b0 |$
b0 }$
b0 J$
b0 K$
0N$
b0 L$
b0 M$
0O$
b0 H$
b0 I$
b0 t#
b0 u#
0x#
b0 v#
b0 w#
0y#
b0 r#
b0 s#
b0 @#
b0 A#
0D#
b0 B#
b0 C#
0E#
b0 >#
b0 ?#
b0 j"
b0 k"
0n"
b0 l"
b0 m"
0o"
b0 h"
b0 i"
b0 6"
b0 7"
0:"
b0 8"
b0 9"
0;"
b0 4"
b0 5"
b0 `!
b0 a!
0d!
b0 b!
b0 c!
0e!
b0 ^!
b0 _!
b0 ,!
b0 !!
b0 /!
b0 .!
b0 (!
b0 x
0%!
b0 #!
0$!
0('
0''
0&'
0%'
0$'
0#'
0"'
0!'
0t&
0s&
0r&
0q&
0p&
0o&
0n&
0m&
0b&
0a&
0`&
0_&
0^&
0]&
0\&
0[&
0P&
0O&
0N&
0M&
0L&
0K&
0J&
0I&
0>&
0=&
0<&
0;&
0:&
09&
08&
07&
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0x%
0w%
0v%
0u%
0t%
0s%
0r%
0q%
0f%
0e%
0d%
0c%
0b%
0a%
0`%
0_%
0>0
0=0
0<0
0;0
0:0
090
080
070
0P'
0O'
0N'
0M'
0L'
0K'
0J'
0I'
0H'
0G'
0F'
0E'
0D'
0C'
0B'
0A'
0@'
0?'
0>'
0='
0<'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
02'
01'
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0H!
0G!
0F!
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
04$
03$
02$
01$
00$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
15!
1i!
1?"
1s"
1I#
1}#
1S$
1)%
0-
0,
0+
0*
0)
b0 -!
b1 -!
#15000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 -'
b0 )'
b0 y&
b0 u&
b0 g&
b0 c&
b0 U&
b0 Q&
b0 C&
b0 ?&
b0 1&
b0 -&
b0 }%
b0 y%
b0 k%
b0 g%
b0 ,'
b0 x&
b0 f&
b0 T&
b0 B&
b0 0&
b0 |%
b0 j%
b0 C0
b0 ?0
b0 B0
1~+
0m+
1A0
1i%
1{%
1/&
1A&
1S&
1e&
1w&
1+'
1+!
b0 )!
0*'
0v&
0d&
0R&
0@&
0.&
0z%
0h%
0@0
0*!
01%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
0=!
0<!
0;!
0:!
09!
08!
07!
06!
09%
08%
07%
06%
05%
04%
03%
02%
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0y!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0E!
0D!
0C!
0B!
0A!
0@!
0?!
0>!
#20000
0!
0i
0~+
#25000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
#30000
b1111 "
0!
1m
0i
0~+
#35000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1 ,!
1"!
1~+
0m+
b1 x
05!
0i!
0?"
0s"
0I#
0}#
0S$
0)%
1Q'
1-
b10 -!
#40000
0!
0i
0~+
#45000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 7(
b1010 8(
1T'
b1 9(
1~+
1m+
b10 ,!
0"!
1"!
b10 x
1%!
0=(
0<(
0;(
0:(
0-
1,
#50000
0!
0i
0~+
#55000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0"!
1~+
0m+
b0 [+
b1001 8(
0Q'
b100000010000000110000010000000101000001100000011100001000 T+
b100000010000000110000010000000101000001100000011100001000 S+
0}(
0|(
0{(
1z(
0y(
0x(
0w(
0v(
1u(
1t(
1s(
0r(
0q(
0p(
0o(
0n(
0m(
1l(
1k(
0j(
0i(
0h(
0g(
0f(
1e(
0d(
1c(
0b(
0a(
0`(
0_(
0^(
0](
0\(
1[(
0Z(
0Y(
0X(
0W(
0V(
1U(
1T(
0S(
0R(
0Q(
0P(
0O(
0N(
0M(
1L(
0K(
0J(
0I(
0H(
0G(
0F(
1E(
0D(
0C(
0B(
0A(
0@(
0?(
0>(
06(
05(
04(
13(
02(
01(
00(
0/(
1.(
1-(
1,(
0+(
0*(
0)(
0((
0'(
0&(
1%(
1$(
0#(
0"(
0!(
0~'
0}'
1|'
0{'
1z'
0y'
0x'
0w'
0v'
0u'
0t'
0s'
1r'
0q'
0p'
0o'
0n'
0m'
1l'
1k'
0j'
0i'
0h'
0g'
0f'
0e'
0d'
1c'
0b'
0a'
0`'
0_'
0^'
0]'
1\'
0['
0Z'
0Y'
0X'
0W'
0V'
0U'
#60000
0!
0i
0~+
#65000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1000 8(
1~+
1m+
#70000
0!
0i
0~+
#75000
1!
1i
1~+
0m+
b111 8(
#80000
0!
0i
0~+
#85000
1!
1i
b110 8(
1~+
1m+
#90000
0!
0i
0~+
#95000
1!
1i
1~+
0m+
b101 8(
#100000
0!
0i
0~+
#105000
1!
1i
b100 8(
1~+
1m+
#110000
0!
0i
0~+
#115000
1!
1i
1~+
0m+
b11 8(
#120000
0!
0i
0~+
#125000
1!
1i
b10 8(
1~+
1m+
#130000
0!
0i
0~+
#135000
1!
1i
1~+
0m+
b1 8(
#140000
0!
0i
0~+
#145000
1!
1i
b0 8(
1~+
1m+
#150000
0!
0i
0~+
#155000
1!
1i
1~+
0m+
b10 9(
#160000
0!
0i
0~+
#165000
1!
1i
b100000010000000110000010000000101000001100000011100001000 R'
1S'
0T'
b0 9(
1~+
1m+
0%!
1$!
b100000010000000110000010000000101000001100000011100001000 #!
b11 -!
#170000
0!
0i
0~+
#175000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b11 ,!
b100000010000000110000010000000101000001100000011100001000 /!
1~+
0m+
0S'
0$!
b11 x
1-
#180000
0!
0i
0~+
#185000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
1&!
b1 (!
b1 .!
160
1>0
#190000
0!
0i
0~+
#195000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1 B0
0&!
1&!
b10 (!
b10 .!
1~+
0m+
0A0
0+!
0>0
1=0
#200000
0!
0i
0~+
#205000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0&!
1&!
b11 (!
b11 .!
b10 B0
1>0
#210000
0!
0i
0~+
#215000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b11 B0
0&!
1&!
b100 (!
b100 .!
1~+
0m+
0>0
0=0
1<0
#220000
0!
0i
0~+
#225000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0&!
1&!
b101 (!
b101 .!
b100 B0
1>0
#230000
0!
0i
0~+
#235000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b101 B0
0&!
1&!
b110 (!
b110 .!
1~+
0m+
0>0
1=0
#240000
0!
0i
0~+
#245000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0&!
1&!
b111 (!
b111 .!
b110 B0
1>0
b100 -!
#250000
0!
0i
0~+
#255000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b100 ,!
b111 B0
0&!
1&!
b1000 (!
b0 .!
1~+
0m+
b100 x
0>0
0=0
0<0
1;0
0-
0,
1+
b101 -!
#260000
0!
0i
0~+
#265000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b1000 B0
b101 ,!
0&!
b1 !!
1"!
b101 x
1@0
060
1P'
1Q'
1*!
1-
#270000
0!
0i
0~+
#275000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1 7(
b1010 8(
1T'
b1 9(
0"!
1~+
0m+
1%!
1=(
0Q'
#280000
0!
0i
0~+
#285000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b1 [+
b1001 8(
b1000100010010000100110001010000010101000101100001011100011000 T+
b1000100010010000100110001010000010101000101100001011100011000 S+
1y(
1q(
1i(
1a(
1Y(
1Q(
1I(
1A(
12(
1*(
1"(
1x'
1p'
1h'
1`'
1X'
#290000
0!
0i
0~+
#295000
1!
1i
b1000 8(
1~+
0m+
#300000
0!
0i
0~+
#305000
1!
1i
1~+
1m+
b111 8(
#310000
0!
0i
0~+
#315000
1!
1i
b110 8(
1~+
0m+
#320000
0!
0i
0~+
#325000
1!
1i
1~+
1m+
b101 8(
#330000
0!
0i
0~+
#335000
1!
1i
b100 8(
1~+
0m+
#340000
0!
0i
0~+
#345000
1!
1i
1~+
1m+
b11 8(
#350000
0!
0i
0~+
#355000
1!
1i
b10 8(
1~+
0m+
#360000
0!
0i
0~+
#365000
1!
1i
1~+
1m+
b1 8(
#370000
0!
0i
0~+
#375000
1!
1i
b0 8(
1~+
0m+
#380000
0!
0i
0~+
#385000
1!
1i
1~+
1m+
b10 9(
#390000
0!
0i
0~+
#395000
1!
1i
b1000100010010000100110001010000010101000101100001011100011000 R'
1S'
0T'
b0 9(
1~+
0m+
0%!
1$!
b1000100010010000100110001010000010101000101100001011100011000 #!
b110 -!
#400000
0!
0i
0~+
#405000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b110 ,!
b1000100010010000100110001010000010101000101100001011100011000 /!
1~+
1m+
0S'
0$!
b110 x
0-
1,
#410000
0!
0i
0~+
#415000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b1 .!
1~&
1('
1$'
#420000
0!
0i
0~+
#425000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1 ,'
b10 .!
1~+
1m+
0+'
0('
1''
#430000
0!
0i
0~+
#435000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b11 .!
b10 ,'
1('
#440000
0!
0i
0~+
#445000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b11 ,'
b100 .!
1~+
1m+
0('
0''
1&'
#450000
0!
0i
0~+
#455000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b101 .!
b100 ,'
1('
#460000
0!
0i
0~+
#465000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b101 ,'
b110 .!
1~+
1m+
0('
1''
#470000
0!
0i
0~+
#475000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b111 .!
b110 ,'
1('
b111 -!
#480000
0!
0i
0~+
#485000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b111 ,!
b111 ,'
b0 .!
1~+
1m+
b111 x
0('
0''
0&'
1%'
1-
b1000 -!
#490000
0!
0i
0~+
#495000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b1000 ,'
b1000 ,!
b10 !!
1"!
b1000 x
1*'
0~&
0P'
1O'
1Q'
0-
0,
0+
1*
#500000
0!
0i
0~+
#505000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b10 7(
b1010 8(
1T'
b1 9(
0"!
1~+
1m+
1%!
0=(
1<(
0Q'
#510000
0!
0i
0~+
#515000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b10 [+
b1001 8(
b10000100100010001000110010010000100101001001100010011100101000 T+
b10000100100010001000110010010000100101001001100010011100101000 S+
0y(
1x(
0q(
1p(
0i(
1h(
0a(
1`(
0Y(
1X(
0Q(
1P(
0I(
1H(
0A(
1@(
02(
11(
0*(
1)(
0"(
1!(
0x'
1w'
0p'
1o'
0h'
1g'
0`'
1_'
0X'
1W'
#520000
0!
0i
0~+
#525000
1!
1i
b1000 8(
1~+
1m+
#530000
0!
0i
0~+
#535000
1!
1i
1~+
0m+
b111 8(
#540000
0!
0i
0~+
#545000
1!
1i
b110 8(
1~+
1m+
#550000
0!
0i
0~+
#555000
1!
1i
1~+
0m+
b101 8(
#560000
0!
0i
0~+
#565000
1!
1i
b100 8(
1~+
1m+
#570000
0!
0i
0~+
#575000
1!
1i
1~+
0m+
b11 8(
#580000
0!
0i
0~+
#585000
1!
1i
b10 8(
1~+
1m+
#590000
0!
0i
0~+
#595000
1!
1i
1~+
0m+
b1 8(
#600000
0!
0i
0~+
#605000
1!
1i
b0 8(
1~+
1m+
#610000
0!
0i
0~+
#615000
1!
1i
1~+
0m+
b10 9(
#620000
0!
0i
0~+
#625000
1!
1i
b10000100100010001000110010010000100101001001100010011100101000 R'
1S'
0T'
b0 9(
1~+
1m+
0%!
1$!
b10000100100010001000110010010000100101001001100010011100101000 #!
b1001 -!
#630000
0!
0i
0~+
#635000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1001 ,!
b10000100100010001000110010010000100101001001100010011100101000 /!
1~+
0m+
0S'
0$!
b1001 x
1-
#640000
0!
0i
0~+
#645000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b1 .!
1l&
1t&
1o&
#650000
0!
0i
0~+
#655000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1 x&
b10 .!
1~+
0m+
0w&
0t&
1s&
#660000
0!
0i
0~+
#665000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b11 .!
b10 x&
1t&
#670000
0!
0i
0~+
#675000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b11 x&
b100 .!
1~+
0m+
0t&
0s&
1r&
#680000
0!
0i
0~+
#685000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b101 .!
b100 x&
1t&
#690000
0!
0i
0~+
#695000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b101 x&
b110 .!
1~+
0m+
0t&
1s&
#700000
0!
0i
0~+
#705000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b111 .!
b110 x&
1t&
b1010 -!
#710000
0!
0i
0~+
#715000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1010 ,!
b111 x&
b0 .!
1~+
0m+
b1010 x
0t&
0s&
0r&
1q&
0-
1,
b1011 -!
#720000
0!
0i
0~+
#725000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b1000 x&
b1011 ,!
b11 !!
1"!
b1011 x
1v&
0l&
1P'
1Q'
1-
#730000
0!
0i
0~+
#735000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b11 7(
b1010 8(
1T'
b1 9(
0"!
1~+
0m+
1%!
1=(
0Q'
#740000
0!
0i
0~+
#745000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b11 [+
b1001 8(
b11000100110010001100110011010000110101001101100011011100111000 T+
b11000100110010001100110011010000110101001101100011011100111000 S+
1y(
1q(
1i(
1a(
1Y(
1Q(
1I(
1A(
12(
1*(
1"(
1x'
1p'
1h'
1`'
1X'
#750000
0!
0i
0~+
#755000
1!
1i
b1000 8(
1~+
0m+
#760000
0!
0i
0~+
#765000
1!
1i
1~+
1m+
b111 8(
#770000
0!
0i
0~+
#775000
1!
1i
b110 8(
1~+
0m+
#780000
0!
0i
0~+
#785000
1!
1i
1~+
1m+
b101 8(
#790000
0!
0i
0~+
#795000
1!
1i
b100 8(
1~+
0m+
#800000
0!
0i
0~+
#805000
1!
1i
1~+
1m+
b11 8(
#810000
0!
0i
0~+
#815000
1!
1i
b10 8(
1~+
0m+
#820000
0!
0i
0~+
#825000
1!
1i
1~+
1m+
b1 8(
#830000
0!
0i
0~+
#835000
1!
1i
b0 8(
1~+
0m+
#840000
0!
0i
0~+
#845000
1!
1i
1~+
1m+
b10 9(
#850000
0!
0i
0~+
#855000
1!
1i
b11000100110010001100110011010000110101001101100011011100111000 R'
1S'
0T'
b0 9(
1~+
0m+
0%!
1$!
b11000100110010001100110011010000110101001101100011011100111000 #!
b1100 -!
#860000
0!
0i
0~+
#865000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1100 ,!
b11000100110010001100110011010000110101001101100011011100111000 /!
1~+
1m+
0S'
0$!
b1100 x
0-
0,
1+
#870000
0!
0i
0~+
#875000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b1 .!
1Z&
1b&
1^&
1]&
#880000
0!
0i
0~+
#885000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1 f&
b10 .!
1~+
1m+
0e&
0b&
1a&
#890000
0!
0i
0~+
#895000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b11 .!
b10 f&
1b&
#900000
0!
0i
0~+
#905000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b11 f&
b100 .!
1~+
1m+
0b&
0a&
1`&
#910000
0!
0i
0~+
#915000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b101 .!
b100 f&
1b&
#920000
0!
0i
0~+
#925000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b101 f&
b110 .!
1~+
1m+
0b&
1a&
#930000
0!
0i
0~+
#935000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b111 .!
b110 f&
1b&
b1101 -!
#940000
0!
0i
0~+
#945000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1101 ,!
b111 f&
b0 .!
1~+
1m+
b1101 x
0b&
0a&
0`&
1_&
1-
b1110 -!
#950000
0!
0i
0~+
#955000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b1000 f&
b1110 ,!
b100 !!
1"!
b1110 x
1d&
0Z&
0P'
0O'
1N'
1Q'
0-
1,
#960000
0!
0i
0~+
#965000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b100 7(
b1010 8(
1T'
b1 9(
0"!
1~+
1m+
1%!
0=(
0<(
1;(
0Q'
#970000
0!
0i
0~+
#975000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b100 [+
b1001 8(
b100000101000010010000110100010001000101010001100100011101001000 T+
b100000101000010010000110100010001000101010001100100011101001000 S+
0y(
0x(
1w(
0q(
0p(
1o(
0i(
0h(
1g(
0a(
0`(
1_(
0Y(
0X(
1W(
0Q(
0P(
1O(
0I(
0H(
1G(
0A(
0@(
1?(
02(
01(
10(
0*(
0)(
1((
0"(
0!(
1~'
0x'
0w'
1v'
0p'
0o'
1n'
0h'
0g'
1f'
0`'
0_'
1^'
0X'
0W'
1V'
#980000
0!
0i
0~+
#985000
1!
1i
b1000 8(
1~+
1m+
#990000
0!
0i
0~+
#995000
1!
1i
1~+
0m+
b111 8(
#1000000
0!
0i
0~+
#1005000
1!
1i
b110 8(
1~+
1m+
#1010000
0!
0i
0~+
#1015000
1!
1i
1~+
0m+
b101 8(
#1020000
0!
0i
0~+
#1025000
1!
1i
b100 8(
1~+
1m+
#1030000
0!
0i
0~+
#1035000
1!
1i
1~+
0m+
b11 8(
#1040000
0!
0i
0~+
#1045000
1!
1i
b10 8(
1~+
1m+
#1050000
0!
0i
0~+
#1055000
1!
1i
1~+
0m+
b1 8(
#1060000
0!
0i
0~+
#1065000
1!
1i
b0 8(
1~+
1m+
#1070000
0!
0i
0~+
#1075000
1!
1i
1~+
0m+
b10 9(
#1080000
0!
0i
0~+
#1085000
1!
1i
b100000101000010010000110100010001000101010001100100011101001000 R'
1S'
0T'
b0 9(
1~+
1m+
0%!
1$!
b100000101000010010000110100010001000101010001100100011101001000 #!
b1111 -!
#1090000
0!
0i
0~+
#1095000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1111 ,!
b100000101000010010000110100010001000101010001100100011101001000 /!
1~+
0m+
0S'
0$!
b1111 x
1-
#1100000
0!
0i
0~+
#1105000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b1 .!
1H&
1P&
1J&
#1110000
0!
0i
0~+
#1115000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1 T&
b10 .!
1~+
0m+
0S&
0P&
1O&
#1120000
0!
0i
0~+
#1125000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b11 .!
b10 T&
1P&
#1130000
0!
0i
0~+
#1135000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b11 T&
b100 .!
1~+
0m+
0P&
0O&
1N&
#1140000
0!
0i
0~+
#1145000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b101 .!
b100 T&
1P&
#1150000
0!
0i
0~+
#1155000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b101 T&
b110 .!
1~+
0m+
0P&
1O&
#1160000
0!
0i
0~+
#1165000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b111 .!
b110 T&
1P&
b10000 -!
#1170000
0!
0i
0~+
#1175000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b10000 ,!
b111 T&
b0 .!
1~+
0m+
b10000 x
0P&
0O&
0N&
1M&
0-
0,
0+
0*
1)
b10001 -!
#1180000
0!
0i
0~+
#1185000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b1000 T&
b10001 ,!
b101 !!
1"!
b10001 x
1R&
0H&
1P'
1Q'
1-
#1190000
0!
0i
0~+
#1195000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b101 7(
b1010 8(
1T'
b1 9(
0"!
1~+
0m+
1%!
1=(
0Q'
#1200000
0!
0i
0~+
#1205000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b101 [+
b1001 8(
b101000101010010010100110101010001010101010101100101011101011000 T+
b101000101010010010100110101010001010101010101100101011101011000 S+
1y(
1q(
1i(
1a(
1Y(
1Q(
1I(
1A(
12(
1*(
1"(
1x'
1p'
1h'
1`'
1X'
#1210000
0!
0i
0~+
#1215000
1!
1i
b1000 8(
1~+
0m+
#1220000
0!
0i
0~+
#1225000
1!
1i
1~+
1m+
b111 8(
#1230000
0!
0i
0~+
#1235000
1!
1i
b110 8(
1~+
0m+
#1240000
0!
0i
0~+
#1245000
1!
1i
1~+
1m+
b101 8(
#1250000
0!
0i
0~+
#1255000
1!
1i
b100 8(
1~+
0m+
#1260000
0!
0i
0~+
#1265000
1!
1i
1~+
1m+
b11 8(
#1270000
0!
0i
0~+
#1275000
1!
1i
b10 8(
1~+
0m+
#1280000
0!
0i
0~+
#1285000
1!
1i
1~+
1m+
b1 8(
#1290000
0!
0i
0~+
#1295000
1!
1i
b0 8(
1~+
0m+
#1300000
0!
0i
0~+
#1305000
1!
1i
1~+
1m+
b10 9(
#1310000
0!
0i
0~+
#1315000
1!
1i
b101000101010010010100110101010001010101010101100101011101011000 R'
1S'
0T'
b0 9(
1~+
0m+
0%!
1$!
b101000101010010010100110101010001010101010101100101011101011000 #!
b10010 -!
#1320000
0!
0i
0~+
#1325000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b10010 ,!
b101000101010010010100110101010001010101010101100101011101011000 /!
1~+
1m+
0S'
0$!
b10010 x
0-
1,
#1330000
0!
0i
0~+
#1335000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b1 .!
16&
1>&
1:&
18&
#1340000
0!
0i
0~+
#1345000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1 B&
b10 .!
1~+
1m+
0A&
0>&
1=&
#1350000
0!
0i
0~+
#1355000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b11 .!
b10 B&
1>&
#1360000
0!
0i
0~+
#1365000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b11 B&
b100 .!
1~+
1m+
0>&
0=&
1<&
#1370000
0!
0i
0~+
#1375000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b101 .!
b100 B&
1>&
#1380000
0!
0i
0~+
#1385000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b101 B&
b110 .!
1~+
1m+
0>&
1=&
#1390000
0!
0i
0~+
#1395000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b111 .!
b110 B&
1>&
b10011 -!
#1400000
0!
0i
0~+
#1405000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b10011 ,!
b111 B&
b0 .!
1~+
1m+
b10011 x
0>&
0=&
0<&
1;&
1-
b10100 -!
#1410000
0!
0i
0~+
#1415000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b1000 B&
b10100 ,!
b110 !!
1"!
b10100 x
1@&
06&
0P'
1O'
1Q'
0-
0,
1+
#1420000
0!
0i
0~+
#1425000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b110 7(
b1010 8(
1T'
b1 9(
0"!
1~+
1m+
1%!
0=(
1<(
0Q'
#1430000
0!
0i
0~+
#1435000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b110 [+
b1001 8(
b110000101100010011000110110010001100101011001100110011101101000 T+
b110000101100010011000110110010001100101011001100110011101101000 S+
0y(
1x(
0q(
1p(
0i(
1h(
0a(
1`(
0Y(
1X(
0Q(
1P(
0I(
1H(
0A(
1@(
02(
11(
0*(
1)(
0"(
1!(
0x'
1w'
0p'
1o'
0h'
1g'
0`'
1_'
0X'
1W'
#1440000
0!
0i
0~+
#1445000
1!
1i
b1000 8(
1~+
1m+
#1450000
0!
0i
0~+
#1455000
1!
1i
1~+
0m+
b111 8(
#1460000
0!
0i
0~+
#1465000
1!
1i
b110 8(
1~+
1m+
#1470000
0!
0i
0~+
#1475000
1!
1i
1~+
0m+
b101 8(
#1480000
0!
0i
0~+
#1485000
1!
1i
b100 8(
1~+
1m+
#1490000
0!
0i
0~+
#1495000
1!
1i
1~+
0m+
b11 8(
#1500000
0!
0i
0~+
#1505000
1!
1i
b10 8(
1~+
1m+
#1510000
0!
0i
0~+
#1515000
1!
1i
1~+
0m+
b1 8(
#1520000
0!
0i
0~+
#1525000
1!
1i
b0 8(
1~+
1m+
#1530000
0!
0i
0~+
#1535000
1!
1i
1~+
0m+
b10 9(
#1540000
0!
0i
0~+
#1545000
1!
1i
b110000101100010011000110110010001100101011001100110011101101000 R'
1S'
0T'
b0 9(
1~+
1m+
0%!
1$!
b110000101100010011000110110010001100101011001100110011101101000 #!
b10101 -!
#1550000
0!
0i
0~+
#1555000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b10101 ,!
b110000101100010011000110110010001100101011001100110011101101000 /!
1~+
0m+
0S'
0$!
b10101 x
1-
#1560000
0!
0i
0~+
#1565000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b1 .!
1$&
1,&
1'&
1&&
#1570000
0!
0i
0~+
#1575000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1 0&
b10 .!
1~+
0m+
0/&
0,&
1+&
#1580000
0!
0i
0~+
#1585000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b11 .!
b10 0&
1,&
#1590000
0!
0i
0~+
#1595000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b11 0&
b100 .!
1~+
0m+
0,&
0+&
1*&
#1600000
0!
0i
0~+
#1605000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b101 .!
b100 0&
1,&
#1610000
0!
0i
0~+
#1615000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b101 0&
b110 .!
1~+
0m+
0,&
1+&
#1620000
0!
0i
0~+
#1625000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b111 .!
b110 0&
1,&
b10110 -!
#1630000
0!
0i
0~+
#1635000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b10110 ,!
b111 0&
b0 .!
1~+
0m+
b10110 x
0,&
0+&
0*&
1)&
0-
1,
b10111 -!
#1640000
0!
0i
0~+
#1645000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b1000 0&
b10111 ,!
b111 !!
1"!
b10111 x
1.&
0$&
1P'
1Q'
1-
#1650000
0!
0i
0~+
#1655000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b111 7(
b1010 8(
1T'
b1 9(
0"!
1~+
0m+
1%!
1=(
0Q'
#1660000
0!
0i
0~+
#1665000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b111 [+
b1001 8(
b111000101110010011100110111010001110101011101100111011101111000 T+
b111000101110010011100110111010001110101011101100111011101111000 S+
1y(
1q(
1i(
1a(
1Y(
1Q(
1I(
1A(
12(
1*(
1"(
1x'
1p'
1h'
1`'
1X'
#1670000
0!
0i
0~+
#1675000
1!
1i
b1000 8(
1~+
0m+
#1680000
0!
0i
0~+
#1685000
1!
1i
1~+
1m+
b111 8(
#1690000
0!
0i
0~+
#1695000
1!
1i
b110 8(
1~+
0m+
#1700000
0!
0i
0~+
#1705000
1!
1i
1~+
1m+
b101 8(
#1710000
0!
0i
0~+
#1715000
1!
1i
b100 8(
1~+
0m+
#1720000
0!
0i
0~+
#1725000
1!
1i
1~+
1m+
b11 8(
#1730000
0!
0i
0~+
#1735000
1!
1i
b10 8(
1~+
0m+
#1740000
0!
0i
0~+
#1745000
1!
1i
1~+
1m+
b1 8(
#1750000
0!
0i
0~+
#1755000
1!
1i
b0 8(
1~+
0m+
#1760000
0!
0i
0~+
#1765000
1!
1i
1~+
1m+
b10 9(
#1770000
0!
0i
0~+
#1775000
1!
1i
b111000101110010011100110111010001110101011101100111011101111000 R'
1S'
0T'
b0 9(
1~+
0m+
0%!
1$!
b111000101110010011100110111010001110101011101100111011101111000 #!
b11000 -!
#1780000
0!
0i
0~+
#1785000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b11000 ,!
b111000101110010011100110111010001110101011101100111011101111000 /!
1~+
1m+
0S'
0$!
b11000 x
0-
0,
0+
1*
#1790000
0!
0i
0~+
#1795000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b1 .!
1p%
1x%
1t%
1s%
1r%
#1800000
0!
0i
0~+
#1805000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1 |%
b10 .!
1~+
1m+
0{%
0x%
1w%
#1810000
0!
0i
0~+
#1815000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b11 .!
b10 |%
1x%
#1820000
0!
0i
0~+
#1825000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b11 |%
b100 .!
1~+
1m+
0x%
0w%
1v%
#1830000
0!
0i
0~+
#1835000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b101 .!
b100 |%
1x%
#1840000
0!
0i
0~+
#1845000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b101 |%
b110 .!
1~+
1m+
0x%
1w%
#1850000
0!
0i
0~+
#1855000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b111 .!
b110 |%
1x%
b11001 -!
#1860000
0!
0i
0~+
#1865000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b11001 ,!
b111 |%
b0 .!
1~+
1m+
b11001 x
0x%
0w%
0v%
1u%
1-
b11010 -!
#1870000
0!
0i
0~+
#1875000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b1000 |%
b11010 ,!
b1000 !!
1"!
b11010 x
1z%
0p%
0P'
0O'
0N'
1M'
1Q'
0-
1,
#1880000
0!
0i
0~+
#1885000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1000 7(
b1010 8(
1T'
b1 9(
0"!
1~+
1m+
1%!
0=(
0<(
0;(
1:(
0Q'
#1890000
0!
0i
0~+
#1895000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
0m+
b1000 [+
b1001 8(
b1000000110000010100000111000010010000101100001101000011110001000 T+
b1000000110000010100000111000010010000101100001101000011110001000 S+
0y(
0x(
0w(
1v(
0q(
0p(
0o(
1n(
0i(
0h(
0g(
1f(
0a(
0`(
0_(
1^(
0Y(
0X(
0W(
1V(
0Q(
0P(
0O(
1N(
0I(
0H(
0G(
1F(
0A(
0@(
0?(
1>(
02(
01(
00(
1/(
0*(
0)(
0((
1'(
0"(
0!(
0~'
1}'
0x'
0w'
0v'
1u'
0p'
0o'
0n'
1m'
0h'
0g'
0f'
1e'
0`'
0_'
0^'
1]'
0X'
0W'
0V'
1U'
#1900000
0!
0i
0~+
#1905000
1!
1i
b1000 8(
1~+
1m+
#1910000
0!
0i
0~+
#1915000
1!
1i
1~+
0m+
b111 8(
#1920000
0!
0i
0~+
#1925000
1!
1i
b110 8(
1~+
1m+
#1930000
0!
0i
0~+
#1935000
1!
1i
1~+
0m+
b101 8(
#1940000
0!
0i
0~+
#1945000
1!
1i
b100 8(
1~+
1m+
#1950000
0!
0i
0~+
#1955000
1!
1i
1~+
0m+
b11 8(
#1960000
0!
0i
0~+
#1965000
1!
1i
b10 8(
1~+
1m+
#1970000
0!
0i
0~+
#1975000
1!
1i
1~+
0m+
b1 8(
#1980000
0!
0i
0~+
#1985000
1!
1i
b0 8(
1~+
1m+
#1990000
0!
0i
0~+
#1995000
1!
1i
1~+
0m+
b10 9(
#2000000
0!
0i
0~+
#2005000
1!
1i
b1000000110000010100000111000010010000101100001101000011110001000 R'
1S'
0T'
b0 9(
1~+
1m+
0%!
1$!
b1000000110000010100000111000010010000101100001101000011110001000 #!
b11011 -!
#2010000
0!
0i
0~+
#2015000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b11011 ,!
b1000000110000010100000111000010010000101100001101000011110001000 /!
1~+
0m+
0S'
0$!
b11011 x
1-
#2020000
0!
0i
0~+
#2025000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b1 .!
1^%
1f%
1_%
#2030000
0!
0i
0~+
#2035000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1 j%
b10 .!
1~+
0m+
0i%
0f%
1e%
#2040000
0!
0i
0~+
#2045000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b11 .!
b10 j%
1f%
#2050000
0!
0i
0~+
#2055000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b11 j%
b100 .!
1~+
0m+
0f%
0e%
1d%
#2060000
0!
0i
0~+
#2065000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b101 .!
b100 j%
1f%
#2070000
0!
0i
0~+
#2075000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b101 j%
b110 .!
1~+
0m+
0f%
1e%
#2080000
0!
0i
0~+
#2085000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b111 .!
b110 j%
1f%
b11100 -!
#2090000
0!
0i
0~+
#2095000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b11100 ,!
b111 j%
b0 .!
1~+
0m+
b11100 x
0f%
0e%
0d%
1c%
0-
0,
1+
b11101 -!
#2100000
0!
0i
0~+
#2105000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
b1000 j%
b11101 ,!
b11101 x
1h%
0^%
15!
1i!
1?"
1s"
1I#
1}#
1S$
1)%
1-
#2110000
0!
0i
0~+
#2115000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1'!
1~+
0m+
05!
0i!
0?"
0s"
0I#
0}#
0S$
0)%
1]%
1o%
1#&
15&
1G&
1Y&
1k&
1}&
14!
1h!
1>"
1r"
1H#
1|#
1R$
1(%
150
#2120000
0!
0i
0~+
#2125000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b1 ?0
b1 C0
1X%
1$%
1N$
1x#
1D#
1n"
1:"
1d!
b10001 )'
b1 -'
b100001 u&
b1 y&
b110001 c&
b1 g&
b1000001 Q&
b1 U&
b1010001 ?&
b1 C&
b1100001 -&
b1 1&
b1110001 y%
b1 }%
b10000001 g%
b1 k%
1~+
1m+
0'!
1'!
b1 )!
0@0
0*'
0v&
0d&
0R&
0@&
0.&
0z%
0h%
0*!
19%
1c$
1/$
1Y#
1%#
1O"
1y!
1E!
11%
1-%
1[$
1V$
1'$
1#$
1"$
1Q#
1K#
1{"
1w"
1u"
1G"
1B"
1A"
1q!
1m!
1l!
1k!
1=!
16!
#2130000
0!
0i
0~+
#2135000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
b10000010 g%
b10 k%
b1110010 y%
b10 }%
b1100010 -&
b10 1&
b1010010 ?&
b10 C&
b1000010 Q&
b10 U&
b110010 c&
b10 g&
b100010 u&
b10 y&
b10010 )'
b10 -'
b10000001 `!
b1 a!
1e!
b1110001 6"
b1 7"
1;"
b1100001 j"
b1 k"
1o"
b1010001 @#
b1 A#
1E#
b1000001 t#
b1 u#
1y#
b110001 J$
b1 K$
1O$
b100001 ~$
b1 !%
1%%
b10001 T%
b1 U%
1Y%
b10 ?0
b10 C0
b10 )!
01%
10%
0[$
1Z$
0'$
1&$
0Q#
1P#
0{"
1z"
0G"
1F"
0q!
1p!
0=!
1<!
09%
18%
0c$
1b$
0/$
1.$
0Y#
1X#
0%#
1$#
0O"
1N"
0y!
1x!
0E!
1D!
#2140000
0!
0i
0~+
#2145000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b11 ?0
b11 C0
b10010 T%
b10 U%
b10001 V%
b1 W%
b10001 R%
b100010 ~$
b10 !%
b100001 "%
b1 #%
b100001 |$
b110010 J$
b10 K$
b110001 L$
b1 M$
b110001 H$
b1000010 t#
b10 u#
b1000001 v#
b1 w#
b1000001 r#
b1010010 @#
b10 A#
b1010001 B#
b1 C#
b1010001 >#
b1100010 j"
b10 k"
b1100001 l"
b1 m"
b1100001 h"
b1110010 6"
b10 7"
b1110001 8"
b1 9"
b1110001 4"
b10000010 `!
b10 a!
b10000001 b!
b1 c!
b10000001 ^!
b10011 )'
b11 -'
b100011 u&
b11 y&
b110011 c&
b11 g&
b1000011 Q&
b11 U&
b1010011 ?&
b11 C&
b1100011 -&
b11 1&
b1110011 y%
b11 }%
b10000011 g%
b11 k%
1~+
1m+
0'!
1'!
b11 )!
19%
1c$
1/$
1Y#
1%#
1O"
1y!
1E!
11%
1[$
1'$
1Q#
1{"
1G"
1q!
1=!
#2150000
0!
0i
0~+
#2155000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
b10000100 g%
b100 k%
b1110100 y%
b100 }%
b1100100 -&
b100 1&
b1010100 ?&
b100 C&
b1000100 Q&
b100 U&
b110100 c&
b100 g&
b100100 u&
b100 y&
b10100 )'
b100 -'
b10000001 _!
b10000011 `!
b11 a!
b10000010 b!
b10 c!
b100000100 ^!
b1110001 5"
b1110011 6"
b11 7"
b1110010 8"
b10 9"
b11100100 4"
b1100001 i"
b1100011 j"
b11 k"
b1100010 l"
b10 m"
b11000100 h"
b1010001 ?#
b1010011 @#
b11 A#
b1010010 B#
b10 C#
b10100100 >#
b1000001 s#
b1000011 t#
b11 u#
b1000010 v#
b10 w#
b10000100 r#
b110001 I$
b110011 J$
b11 K$
b110010 L$
b10 M$
b1100100 H$
b100001 }$
b100011 ~$
b11 !%
b100010 "%
b10 #%
b1000100 |$
b10001 S%
b10011 T%
b11 U%
b10010 V%
b10 W%
b100100 R%
b100 ?0
b100 C0
b100 )!
1Q%
1M%
1{$
1v$
1G$
1C$
1B$
1q#
1k#
1=#
19#
17#
1g"
1b"
1a"
13"
1/"
1."
1-"
1]!
1V!
01%
00%
1/%
0[$
0Z$
1Y$
0'$
0&$
1%$
0Q#
0P#
1O#
0{"
0z"
1y"
0G"
0F"
1E"
0q!
0p!
1o!
0=!
0<!
1;!
09%
08%
17%
0c$
0b$
1a$
0/$
0.$
1-$
0Y#
0X#
1W#
0%#
0$#
1##
0O"
0N"
1M"
0y!
0x!
1w!
0E!
0D!
1C!
#2160000
0!
0i
0~+
#2165000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b101 ?0
b101 C0
b10100 T%
b100 U%
b10011 V%
b11 W%
b111001 R%
b110101 S%
b100100 ~$
b100 !%
b100011 "%
b11 #%
b1101001 |$
b1100101 }$
b110100 J$
b100 K$
b110011 L$
b11 M$
b10011001 H$
b10010101 I$
b1000100 t#
b100 u#
b1000011 v#
b11 w#
b11001001 r#
b11000101 s#
b1010100 @#
b100 A#
b1010011 B#
b11 C#
b11111001 >#
b11110101 ?#
b1100100 j"
b100 k"
b1100011 l"
b11 m"
b100101001 h"
b100100101 i"
b1110100 6"
b100 7"
b1110011 8"
b11 9"
b101011001 4"
b101010101 5"
b10000100 `!
b100 a!
b10000011 b!
b11 c!
b110001001 ^!
b110000101 _!
b10101 )'
b101 -'
b100101 u&
b101 y&
b110101 c&
b101 g&
b1000101 Q&
b101 U&
b1010101 ?&
b101 C&
b1100101 -&
b101 1&
b1110101 y%
b101 }%
b10000101 g%
b101 k%
1~+
1m+
0'!
1'!
b101 )!
1[!
1U!
11"
0."
1+"
1e"
0a"
1_"
1;#
18#
16#
1o#
1j#
1E$
0B$
1@$
1y$
1u$
1O%
1L%
19%
1c$
1/$
1Y#
1%#
1O"
1y!
1E!
11%
1[$
1'$
1Q#
1{"
1G"
1q!
1=!
#2170000
0!
0i
0~+
#2175000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
b10000110 g%
b110 k%
b1110110 y%
b110 }%
b1100110 -&
b110 1&
b1010110 ?&
b110 C&
b1000110 Q&
b110 U&
b110110 c&
b110 g&
b100110 u&
b110 y&
b10110 )'
b110 -'
b1100001110 _!
b10000101 `!
b101 a!
b10000100 b!
b100 c!
b1000010000 ^!
b1010101110 5"
b1110101 6"
b101 7"
b1110100 8"
b100 9"
b111010000 4"
b1001001110 i"
b1100101 j"
b101 k"
b1100100 l"
b100 m"
b110010000 h"
b111101110 ?#
b1010101 @#
b101 A#
b1010100 B#
b100 C#
b101010000 >#
b110001110 s#
b1000101 t#
b101 u#
b1000100 v#
b100 w#
b100010000 r#
b100101110 I$
b110101 J$
b101 K$
b110100 L$
b100 M$
b11010000 H$
b11001110 }$
b100101 ~$
b101 !%
b100100 "%
b100 #%
b10010000 |$
b1101110 S%
b10101 T%
b101 U%
b10100 V%
b100 W%
b1010000 R%
b110 ?0
b110 C0
b110 )!
0Q%
1P%
1N%
0M%
1K%
0{$
1z$
1x$
0v$
1t$
0G$
1F$
1D$
0C$
1B$
0@$
1?$
0q#
1p#
1n#
0k#
1i#
0=#
1<#
1:#
09#
15#
0g"
1f"
1d"
0b"
1a"
0_"
1^"
03"
12"
10"
0/"
1."
0-"
1,"
0+"
1*"
0]!
1\!
1Z!
0V!
1T!
01%
10%
0[$
1Z$
0'$
1&$
0Q#
1P#
0{"
1z"
0G"
1F"
0q!
1p!
0=!
1<!
09%
18%
0c$
1b$
0/$
1.$
0Y#
1X#
0%#
1$#
0O"
1N"
0y!
1x!
0E!
1D!
#2180000
0!
0i
0~+
#2185000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b111 ?0
b111 C0
b10110 T%
b110 U%
b10101 V%
b101 W%
b1101001 R%
b10111110 S%
b100110 ~$
b110 !%
b100101 "%
b101 #%
b10111001 |$
b101011110 }$
b110110 J$
b110 K$
b110101 L$
b101 M$
b100001001 H$
b111111110 I$
b1000110 t#
b110 u#
b1000101 v#
b101 w#
b101011001 r#
b1010011110 s#
b1010110 @#
b110 A#
b1010101 B#
b101 C#
b110101001 >#
b1100111110 ?#
b1100110 j"
b110 k"
b1100101 l"
b101 m"
b111111001 h"
b1111011110 i"
b1110110 6"
b110 7"
b1110101 8"
b101 9"
b1001001001 4"
b10001111110 5"
b10000110 `!
b110 a!
b10000101 b!
b101 c!
b1010011001 ^!
b10100011110 _!
b10111 )'
b111 -'
b100111 u&
b111 y&
b110111 c&
b111 g&
b1000111 Q&
b111 U&
b1010111 ?&
b111 C&
b1100111 -&
b111 1&
b1110111 y%
b111 }%
b10000111 g%
b111 k%
1~+
1m+
0'!
1'!
b111 )!
1Y!
0T!
1S!
1/"
1-"
0,"
0*"
1)"
1c"
1`"
1_"
19#
07#
06#
14#
1m#
0i#
1h#
1C$
1A$
1@$
1w$
0t$
1s$
1M%
0K%
1J%
19%
1c$
1/$
1Y#
1%#
1O"
1y!
1E!
11%
1[$
1'$
1Q#
1{"
1G"
1q!
1=!
#2190000
0!
0i
0~+
#2195000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
b10001000 g%
b1000 k%
b1111000 y%
b1000 }%
b1101000 -&
b1000 1&
b1011000 ?&
b1000 C&
b1001000 Q&
b1000 U&
b111000 c&
b1000 g&
b101000 u&
b1000 y&
b11000 )'
b1000 -'
b11110110111 _!
b10000111 `!
b111 a!
b10000110 b!
b110 c!
b1100100100 ^!
b11011000111 5"
b1110111 6"
b111 7"
b1110110 8"
b110 9"
b1011000100 4"
b10111010111 i"
b1100111 j"
b111 k"
b1100110 l"
b110 m"
b1001100100 h"
b10011100111 ?#
b1010111 @#
b111 A#
b1010110 B#
b110 C#
b1000000100 >#
b1111110111 s#
b1000111 t#
b111 u#
b1000110 v#
b110 w#
b110100100 r#
b1100000111 I$
b110111 J$
b111 K$
b110110 L$
b110 M$
b101000100 H$
b1000010111 }$
b100111 ~$
b111 !%
b100110 "%
b110 #%
b11100100 |$
b100100111 S%
b10111 T%
b111 U%
b10110 V%
b110 W%
b10000100 R%
b1000 ?0
b1000 C0
1A0
1+'
1w&
1e&
1S&
1A&
1/&
1{%
1i%
1+!
b1000 )!
1Q%
0N%
0M%
0J%
1I%
1{$
0x$
0u$
0s$
1r$
1G$
0D$
0C$
0B$
0A$
0@$
1>$
1q#
0n#
1l#
1k#
1i#
1=#
0:#
09#
17#
16#
05#
04#
13#
1g"
0d"
0^"
1]"
13"
00"
0/"
0."
1,"
1*"
1]!
0Z!
1X!
1V!
1T!
01%
00%
0/%
1.%
0[$
0Z$
0Y$
1X$
0'$
0&$
0%$
1$$
0Q#
0P#
0O#
1N#
0{"
0z"
0y"
1x"
0G"
0F"
0E"
1D"
0q!
0p!
0o!
1n!
0=!
0<!
0;!
1:!
09%
08%
07%
16%
0c$
0b$
0a$
1`$
0/$
0.$
0-$
1,$
0Y#
0X#
0W#
1V#
0%#
0$#
0##
1"#
0O"
0N"
0M"
1L"
0y!
0x!
0w!
1v!
0E!
0D!
0C!
1B!
#2200000
0!
0i
0~+
#2205000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b11000 T%
b1000 U%
b10111 V%
b111 W%
b10100001 R%
b110101011 S%
b101000 ~$
b1000 !%
b100111 "%
b111 #%
b100010001 |$
b1011111011 }$
b111000 J$
b1000 K$
b110111 L$
b111 M$
b110000001 H$
b10001001011 I$
b1001000 t#
b1000 u#
b1000111 v#
b111 w#
b111110001 r#
b10110011011 s#
b1011000 @#
b1000 A#
b1010111 B#
b111 C#
b1001100001 >#
b11011101011 ?#
b1101000 j"
b1000 k"
b1100111 l"
b111 m"
b1011010001 h"
b100000111011 i"
b1111000 6"
b1000 7"
b1110111 8"
b111 9"
b1101000001 4"
b100110001011 5"
b10001000 `!
b1000 a!
b10000111 b!
b111 c!
b1110110001 ^!
b101011011011 _!
1~+
1m+
0'!
1'!
0[!
1Z!
0X!
1W!
0U!
0S!
1R!
01"
10"
0-"
1+"
0*"
0)"
1("
0e"
1d"
1b"
0a"
0`"
0_"
0]"
1\"
0;#
1:#
14#
0o#
1n#
0l#
0k#
0h#
1g#
0E$
1D$
1A$
0?$
0>$
1=$
0y$
1x$
1v$
1u$
1t$
0O%
1N%
1J%
04!
0h!
0>"
0r"
0H#
0|#
0R$
0(%
#2210000
0!
0i
0~+
#2215000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
b111010001100 _!
0d!
b10001000 b!
b1000 c!
b10001000000 ^!
b110011001100 5"
0:"
b1111000 8"
b1000 9"
b1111000000 4"
b101100001100 i"
0n"
b1101000 l"
b1000 m"
b1101000000 h"
b100101001100 ?#
0D#
b1011000 B#
b1000 C#
b1011000000 >#
b11110001100 s#
0x#
b1001000 v#
b1000 w#
b1001000000 r#
b10111001100 I$
0N$
b111000 L$
b1000 M$
b111000000 H$
b10000001100 }$
0$%
b101000 "%
b1000 #%
b101000000 |$
b1001001100 S%
0X%
b11000 V%
b1000 W%
b11000000 R%
0Q%
0P%
1O%
0L%
1K%
0J%
0I%
1H%
0{$
0z$
1y$
0w$
0v$
0u$
0t$
0r$
1q$
0G$
0F$
1E$
1@$
1?$
0q#
0p#
1o#
0m#
1h#
0=#
0<#
1;#
08#
06#
15#
04#
03#
12#
0g"
0f"
1e"
0c"
0b"
1_"
1^"
03"
02"
11"
1-"
0+"
1)"
0]!
0\!
1[!
0Y!
0W!
1S!
#2220000
0!
0i
0~+
#2225000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0Y%
b1100001100 S%
0%%
b10101001100 }$
0O$
b11110001100 I$
0y#
b100111001100 s#
0E#
b110000001100 ?#
0o"
b111001001100 i"
0;"
b1000010001100 5"
0e!
b1001011001100 _!
1~+
1m+
0'!
1'!
1W!
0S!
0R!
1Q!
0-"
0)"
0("
1'"
1a"
0_"
1]"
07#
05#
13#
1k#
0h#
0g#
1f#
0A$
1>$
1u$
1s$
0K%
1I%
#2230000
0!
0i
0~+
#2235000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2240000
0!
0i
0~+
#2245000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2250000
0!
0i
0~+
#2255000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2260000
0!
0i
0~+
#2265000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2270000
0!
0i
0~+
#2275000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2280000
0!
0i
0~+
#2285000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2290000
0!
0i
0~+
#2295000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2300000
0!
0i
0~+
#2305000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2310000
0!
0i
0~+
#2315000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2320000
0!
0i
0~+
#2325000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2330000
0!
0i
0~+
#2335000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2340000
0!
0i
0~+
#2345000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2350000
0!
0i
0~+
#2355000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2360000
0!
0i
0~+
#2365000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2370000
0!
0i
0~+
#2375000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2380000
0!
0i
0~+
#2385000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2390000
0!
0i
0~+
#2395000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2400000
0!
0i
0~+
#2405000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2410000
0!
0i
0~+
#2415000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2420000
0!
0i
0~+
#2425000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2430000
0!
0i
0~+
#2435000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2440000
0!
0i
0~+
#2445000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2450000
0!
0i
0~+
#2455000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2460000
0!
0i
0~+
#2465000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2470000
0!
0i
0~+
#2475000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2480000
0!
0i
0~+
#2485000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2490000
0!
0i
0~+
#2495000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2500000
0!
0i
0~+
#2505000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2510000
0!
0i
0~+
#2515000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2520000
0!
0i
0~+
#2525000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2530000
0!
0i
0~+
#2535000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2540000
0!
0i
0~+
#2545000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2550000
0!
0i
0~+
#2555000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2560000
0!
0i
0~+
#2565000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2570000
0!
0i
0~+
#2575000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2580000
0!
0i
0~+
#2585000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2590000
0!
0i
0~+
#2595000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2600000
0!
0i
0~+
#2605000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2610000
0!
0i
0~+
#2615000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2620000
0!
0i
0~+
#2625000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2630000
0!
0i
0~+
#2635000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2640000
0!
0i
0~+
#2645000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2650000
0!
0i
0~+
#2655000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2660000
0!
0i
0~+
#2665000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2670000
0!
0i
0~+
#2675000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2680000
0!
0i
0~+
#2685000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2690000
0!
0i
0~+
#2695000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2700000
0!
0i
0~+
#2705000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2710000
0!
0i
0~+
#2715000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2720000
0!
0i
0~+
#2725000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2730000
0!
0i
0~+
#2735000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2740000
0!
0i
0~+
#2745000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2750000
0!
0i
0~+
#2755000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2760000
0!
0i
0~+
#2765000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2770000
0!
0i
0~+
#2775000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2780000
0!
0i
0~+
#2785000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2790000
0!
0i
0~+
#2795000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2800000
0!
0i
0~+
#2805000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2810000
0!
0i
0~+
#2815000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2820000
0!
0i
0~+
#2825000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2830000
0!
0i
0~+
#2835000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2840000
0!
0i
0~+
#2845000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2850000
0!
0i
0~+
#2855000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2860000
0!
0i
0~+
#2865000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2870000
0!
0i
0~+
#2875000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2880000
0!
0i
0~+
#2885000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2890000
0!
0i
0~+
#2895000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2900000
0!
0i
0~+
#2905000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2910000
0!
0i
0~+
#2915000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2920000
0!
0i
0~+
#2925000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2930000
0!
0i
0~+
#2935000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2940000
0!
0i
0~+
#2945000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2950000
0!
0i
0~+
#2955000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2960000
0!
0i
0~+
#2965000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2970000
0!
0i
0~+
#2975000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#2980000
0!
0i
0~+
#2985000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#2990000
0!
0i
0~+
#2995000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#3000000
0!
0i
0~+
#3005000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
#3010000
0!
0i
0~+
#3015000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
0'!
1'!
1~+
0m+
#3020000
0!
0i
0~+
#3025000
1!
1i
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
b0 0!
b1 0!
b10 0!
b11 0!
b100 0!
b101 0!
b110 0!
b111 0!
b1000 0!
1~+
1m+
0'!
1'!
